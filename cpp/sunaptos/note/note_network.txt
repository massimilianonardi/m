
- decentralized filesystem -> dfs
- decentralized data as filesystem + json-object-db + rdbms (database with schema, tables, relationships, etc)
- decentralized data/fs/actions accessible via hex protocol and also through http (data, auth, etc. commands)
- using mn-webapp, mnjs, etc. it makes possible to provide dynamic web applications -> servlet engine could be provided, 
  but it requires a lot of cpu from the network, while mnjs use browser api and client cpu
- dfs: 
  uses public keys to read and private keys to write
  the above implicates that security is bound to anyone has keys even if stolen or simply given, not by acl
  find a way to use also userid/groupid tokens pub/pri-keys in the process of authentication to have 
  an advanced and compact acl that makes current filesystems obsolete (also sacl: system acl audit to monitor access attempts)
  also quotas
  bidirectional hard links -> child has list of parents -> adding/removing hard links imply modify child node also
  not tree, but graph with circular paths allowed
  node blocks (metadata, directories and file info) and data blocks (actual files containing data)
  everything encrypted
  infinite capability by sparse and local boundaries -> like sequential access you can move anywhere 1 or n steps ahead, 
  but not random/directly at any place in the "infinite" universe -> no directory limit, no file size limit
  every index is relative, all sizes are incremental (define algorithm)
  dynamic redundancy: each node can have different redundancy factor and importance value that determines 
  how many time data are replicated when global storage is bigger than required and what data to discard when storage is smaller
- gui as phantomjs with http communication and java or c++ server engine

---

xnet: temporary name for the new net/coin/etc
initially use kad and bt networks for distributing contents and kad for xnet system files
initially it is only a decenralization of maintained directories of content -> xdir
an xdir is a file available on kad naed as xdir name + space + progressive id for each new release
xdir is encrypted by pgp private key of the maintainer that will distribute the public key as he prefers
users receive name and public key and download latest xdir version with emule
xclient monitors updates of registered xdir and use public key to decrypt and the gzip to unpack it
user browse xdir by means of xclient
xdir can define subdirs (named as: xdir_root_name.xdir_subdir_name) so that only small leafs are updated frequently
xclient:
first scenario: it monitors emule incoming for xdir files, but searches and download are done manually
second scenario: it monitors emule incoming for xdir files and searches are injected into emule via window handle or emule httpclient interface and download are initiated manually
third scenario: reimplement kad search and inject ed2k link via com interface or window handle
fourth scenario: it is integrated into each emule client that should be supported (windows and linux) and it means to be able to reproduce each client compiling environment vstudio etc.

think a way for safely search other xdir that those provided by default by the client

xdir support a generic resource + most common formats + xformats
each format has different associated infos

later xclient it is not only able to browse and download, but also "play" resources (play movies, play albums, etc.)
xformats reinvent common formats for movies, music, etc to standardize + invent new formats to play games, run os, etc
so that xclient can play in a portable manner different os, games on native os or inside emulators, virtual machines etc with all preconfigured no installation or cure/fix required by user

at this point xclient is an easy and portable content delivery client cross platform

developing xos as a lightly customized linux distro os, this will become a content delivery system
xos provides easy usage with several input devices that user may have (air mouses, remote controls, smartphones via bt or wifi, etc)
xos provides a bt/wifi/net client that communicate with smartphone
smartphone app to control xos and play resources (movie controls, game control remap etc)

at this point define different sets of tech specs to build xsilentconsoles + xselfinstalcd -> xcon + xcd
so everyone can sell assembled certified xcon + xcd dont require to seller to do preinstallation, so user just turns on xcon and put xcd first time
hardware makers will thus have a large market that push them to build cool and small xcon with provided specs

at this point reimplement xos as a new hardcore linux with new dev system sunaptos and reimplement xclient as such
support android inside, windows 10 on vhd to reboot with vmware and office

reimplement network continuing to support kad only for reading and copying all xdir content into new net
NB content available on classic emule clients is downloaded and copied into the new network converted to new formats that allows to 
download only few songs inside an album, or a movie with only some langs or only some chapters, or combine video with audio or subs from other sources, 
also content can be provided socially eg someone provide video, some other covers, other audio, other subs, some album, some booklet, some lyrics, etc. 
also a new coin xcoin that can be bought and maybe sell with constant value against gold to prevent speculation and assure users
also platform to sell/buy content, especially apps/games for xos linux
