#!/bin/sh

if [ -L "$0" ]
then
  THIS_PATH="$(ls -ld -- "$0")"
  THIS_PATH="${THIS_PATH#*" $0 -> "}"
else
  THIS_PATH="$0"
fi

THIS_FILE="${THIS_PATH##*/}"

THIS_DIR="$(cd -P -- "${THIS_PATH%/*}" && pwd -P)"

PATH="$THIS_DIR:$PATH"

if [ -z "$1" ]
then
  REPO_DIR="$(gitmenu $(cat "$THIS_DIR/repo.conf"))"
  if [ -z "$REPO_DIR" ]
  then
    rm -f "$THIS_DIR/repo.sel"
    dir-browser-selector "$THIS_DIR/repo.conf" "$THIS_DIR/repo.sel"
    REPO_DIR="$(cat "$THIS_DIR/repo.sel")"
    rm -f "$THIS_DIR/repo.sel"
  # else
  #   echo "REPO_DIR=$REPO_DIR"
  fi
else
  REPO_DIR="$1"
  shift
fi

cd "$REPO_DIR"

if [ -d "./.git" ]
then
  echo "--------------------------------------------------------------------------------"
  echo "GIT REPOSITORY FOUND: $(pwd)"
  echo "--------------------------------------------------------------------------------"
else
  echo "--------------------------------------------------------------------------------"
  echo "NO GIT REPOSITORY FOUND: $(pwd)"
  echo "--------------------------------------------------------------------------------"
  read -p "press ENTER to exit" EXIT_VAR
  exit 1
fi

if [ -f "$THIS_DIR/askpass.conf" ]
then
  GIT_ASKPASS="$(cat "$THIS_DIR/askpass.conf" | grep "$REPO_DIR" | tail -1)"
  GIT_ASKPASS="${GIT_ASKPASS#$REPO_DIR}"
  GIT_ASKPASS="${GIT_ASKPASS#=}"

  if [ -f "$GIT_ASKPASS" ]
  then
    echo "--------------------------------------------------------------------------------"
    echo "GIT ASKPASS FILE FOUND: $GIT_ASKPASS"
    echo "--------------------------------------------------------------------------------"

    export GIT_ASKPASS
    export SSH_ASKPASS="$GIT_ASKPASS"

    export GIT_SSH_COMMAND="setsid ssh"

    export DISPLAY=:0
  else
    echo "--------------------------------------------------------------------------------"
    echo "NO GIT ASKPASS FILE FOUND: $GIT_ASKPASS"
    echo "--------------------------------------------------------------------------------"
  fi
fi

if [ -z "$1" ]
then
  GIT_CMD_COMMAND="$(gitmenu commit reset status)"
  if [ -z "$GIT_CMD_COMMAND" ]
  then
    GIT_CMD_COMMAND="commit"
  fi
else
  GIT_CMD_COMMAND="$1"
  shift
fi

echo "--------------------------------------------------------------------------------"
echo "GITMAN COMMAND: $GIT_CMD_COMMAND"
echo "--------------------------------------------------------------------------------"

"$THIS_DIR/$GIT_CMD_COMMAND" "$@"
EXIT_CODE="$?"

# detect if launched from gui or active terminal
PARENT_PROCESS="$(ps -o 'cmd=' -p $(ps -o 'ppid=' -p $$))"
#if [ "$PARENT_PROCESS" != "bash" ]
if [ "${PARENT_PROCESS%sh}" = "$PARENT_PROCESS" ]
then
  echo ""
  echo "--------------------------------------------------------------------------------"
  read -p "press ENTER to exit" EXIT_VAR
fi

exit "$EXIT_CODE"
