#!/bin/sh

#-------------------------------------------------------------------------------

test_files_start()
{
  TEST_DIR="/tmp/_test_files"

  mkdir -p "$TEST_DIR"
  cd "$TEST_DIR"

  mkdir -p ./aaa/bbb/ccc
  mkdir -p ./aaa/bbb/ccc/dir_empty
  mkdir -p ./aaa/ddd/eee
  mkdir -p ./aaa/colliding/fff
  mkdir -p ./aaa/colliding/sub-colliding
  mkdir -p ./000/111/222
  mkdir -p ./000/111/222/file_dir
  mkdir -p ./000/333/444
  mkdir -p ./000/colliding/555
  mkdir -p ./000/colliding/sub-colliding

  touch ./aaa/file_a1
  touch ./aaa/bbb/file_b1
  touch ./aaa/bbb/ccc/file_c1
  touch ./aaa/bbb/ccc/file_c2
  touch ./aaa/bbb/ccc/file_c3
  touch ./aaa/bbb/ccc/.file_ch1
  touch ./aaa/bbb/ccc/.file_ch2
  touch ./aaa/bbb/ccc/..file_ch3-not-hidden
  touch ./aaa/bbb/ccc/...file_ch4-not-hidden
  touch ./aaa/bbb/ccc/....file_ch5-not-hidden
  touch ./aaa/ddd/eee/file_e1
  touch ./aaa/ddd/eee/file_e2
  touch ./aaa/colliding/fff/file_f1
  echo "inside aaa" > ./aaa/colliding/sub-colliding/file_colliding
  touch ./000/111/222/file_0a
  touch ./000/111/222/file_0b
  touch ./000/111/222/xxx_file_xxx
  touch ./000/colliding/555/file_5a
  echo "inside 000" > ./000/colliding/sub-colliding/file_colliding

  ln -s ../aaa ./aaa/link-recursive
  ln -s ../aaa ./aaa/bbb/link-broken
  ln -s ./aaa/file_a1 ./link-deeper
  ln -s ../../../000/111/222/file_0a ./aaa/bbb/ccc/link-outer
  ln -s "$TEST_DIR"/000/111/222/file_0b ./aaa/bbb/ccc/link-absolute

  echo "--------------------------------------------------------------------------------"
  echo "TEST_DIR - START:"
  find "$TEST_DIR"
  echo "--------------------------------------------------------------------------------"
}

test_files_end()
{
  if [ "$TEST_DIR" = "${TEST_DIR#/tmp/*}" ]
  then
    echo "TEST_DIR=$TEST_DIR"
    echo "exiting to prevent deletions outside tmp directory"
    exit 1
  fi

  echo "--------------------------------------------------------------------------------"
  echo "TEST_DIR - END:"
  find "$TEST_DIR"
  echo "--------------------------------------------------------------------------------"

  rm -rf "$TEST_DIR"
}

#-------------------------------------------------------------------------------

_test_path()
(
  EXPECTED="$1"
  shift
  # RESULT="$(path "$@")"
  RESULT="$(path "$@" 2>/dev/null)"
  EXIT_CODE="$?"
  echo "EXIT CODE: '$EXIT_CODE' --- path $@ --- RESULT: $RESULT --- EXPECTED: $EXPECTED"
)

test_path()
{
  test_files_start

  _test_path "./aaa/bbb" -c ./aaa/../aaa/./bbb
  _test_path "$TEST_DIR/aaa/bbb" -c $TEST_DIR/./aaa/../aaa/bbb
  _test_path "error - .// means relative './' or absolute '/'?" -c .//$TEST_DIR/aaa/../aaa/./bbb

  _test_path "true" -e aaa
  _test_path "false" -e zzz
  _test_path "true" -eL ./aaa/link-recursive
  _test_path "false" -eL zzz

  _test_path "$TEST_DIR/aaa" -a aaa
  _test_path "$TEST_DIR/aaa/bbb/ccc" -a aaa/bbb/ccc
  _test_path "error - doesn't exist" -a ccc

  _test_path "./aaa/file_a1" -l link-deeper
  _test_path "../aaa" -l ./aaa/link-recursive
  _test_path "$TEST_DIR/aaa/file_a1" -L link-deeper
  _test_path "$TEST_DIR/aaa" -L ./aaa/link-recursive
  _test_path "./000/111/222/file_0a" -L ./aaa/bbb/ccc/link-outer
  _test_path "./000/111/222/file_0b" -L ./aaa/bbb/ccc/link-absolute
  _test_path "$TEST_DIR/000/111/222/file_0a" -aL ./aaa/bbb/ccc/link-outer
  _test_path "$TEST_DIR/000/111/222/file_0b" -aL ./aaa/bbb/ccc/link-absolute

  _test_path "error - doesn't exist" -r eee bbb/ccc
  _test_path "../../.." -r . ./aaa/bbb/ccc
  _test_path "./aaa/bbb/ccc" -r aaa/bbb/ccc .
  _test_path "../../../aaa/bbb/ccc" -r aaa/bbb/ccc $TEST_DIR/000/111/222

  test_files_end
}

#-------------------------------------------------------------------------------
