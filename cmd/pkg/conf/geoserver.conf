#!/bin/sh

TYPE="github"
GITHUB_REPO="geoserver/geoserver"
DOWNLOAD_URL='https://sourceforge.net/projects/geoserver/files/GeoServer/${VERSION}/geoserver-${VERSION}-bin.zip'

FILE_TYPE="zip"
# SYMLINKS="geoserver-start=bin/startup.sh geoserver-stop=bin/shutdown.sh"
SYMLINKS="geoserver-start=geoserver-start geoserver-stop=geoserver-stop"

postinstall()
{
  sed -i 's/jetty.http.port=8080/#jetty.http.port=8080/g' start.ini

  cat > "./geoserver-start" << 'EOF'
#!/bin/sh

if [ -L "$0" ]
then
  THIS_PATH="$(ls -ld -- "$0")"
  THIS_PATH="${THIS_PATH#*" $0 -> "}"
else
  THIS_PATH="$0"
fi

export GEOSERVER_HOME="$(cd -P -- "${THIS_PATH%/*}" && pwd -P)"

if [ -z "${GEOSERVER_DATA_DIR:-}" ]
then
  if [ -r "${GEOSERVER_HOME}/data_dir" ]
  then
    export GEOSERVER_DATA_DIR="${GEOSERVER_HOME}/data_dir"
  else
    echo "No GEOSERVER_DATA_DIR found, using application defaults"
    GEOSERVER_DATA_DIR=""
  fi
fi

export JAVA_OPTS="${JAVA_OPTS:+"$JAVA_OPTS"} -DALLOW_ENV_PARAMETRIZATION=true"

# mkdir -p "$GEOSERVER_DATA_DIR/logs"
# "$GEOSERVER_HOME/bin/startup.sh" 1>>"$GEOSERVER_DATA_DIR/logs/stdout.log" 2>&1 &

"$GEOSERVER_HOME/bin/startup.sh"

EOF

  cat > "./geoserver-stop" << 'EOF'
#!/bin/sh

if [ -L "$0" ]
then
  THIS_PATH="$(ls -ld -- "$0")"
  THIS_PATH="${THIS_PATH#*" $0 -> "}"
else
  THIS_PATH="$0"
fi

export GEOSERVER_HOME="$(cd -P -- "${THIS_PATH%/*}" && pwd -P)"

if [ -z "${GEOSERVER_DATA_DIR:-}" ]
then
  if [ -r "${GEOSERVER_HOME}/data_dir" ]
  then
    export GEOSERVER_DATA_DIR="${GEOSERVER_HOME}/data_dir"
  else
    echo "No GEOSERVER_DATA_DIR found, using application defaults"
    GEOSERVER_DATA_DIR=""
  fi
fi

export JAVA_OPTS="${JAVA_OPTS:+"$JAVA_OPTS"} -DALLOW_ENV_PARAMETRIZATION=true"

# mkdir -p "$GEOSERVER_DATA_DIR/logs"
# "$GEOSERVER_HOME/bin/shutdown.sh" 1>>"$GEOSERVER_DATA_DIR/logs/stdout.log" 2>&1 &

"$GEOSERVER_HOME/bin/shutdown.sh"

EOF

  chmod +x "./geoserver-start"
  chmod +x "./geoserver-stop"
}
