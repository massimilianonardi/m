#!/bin/sh

#-------------------------------------------------------------------------------

. env.lib.sh
. term.lib.sh
. array.lib.sh
. map.lib.sh
. menu.lib.sh

#-------------------------------------------------------------------------------

init_menu_dir()
{
  heredoc="$(echo "set -- '$1'"; cat << 'EOF'
    quote()
    {
      if [ -z "$1" ]
      then
        printf "''"
      fi

      printf "%s" "$1" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/'/"
    }

    if [ ! -d "$1" ]
    then
      return 1
    fi

    cd "$1"
    set -- "$(cd -L -- "$1" && pwd -L)"

    if [ ! "$(pwd)" = "/" ]
    then
      quote "${1}/..=.."
      printf " "
    fi

    for k in ..?* .[!.]* *
    do
      if [ -d "$k" ]
      then
        quote "${1}/$k=[D] $k"
        printf " "
      fi
    done

    for k in ..?* .[!.]* *
    do
      if [ -f "$k" ]
      then
        quote "${1}/$k=[F] $k"
        printf " "
      fi
    done
EOF
)"

  term_MFRS_MENU_DIR="$(echo "$heredoc" | rsudo execute "$REMOTE_HOST" "$REMOTE_USER" 2>/dev/null)"
}

load_menu_dir()
{
  term_MFRS_MENU_CURRENT_STATE="$(map term_MFRS_DIR_STATES get "$1")"

  if [ -z "$term_MFRS_MENU_CURRENT_STATE" ]
  then
    init_menu_dir "$@"
    eval env_export "term_MFRS_MENU_CURRENT_STATE" tui-menu $term_MFRS_MENU_DIR
    map term_MFRS_DIR_STATES put "$1" "$term_MFRS_MENU_CURRENT_STATE"
  else
    env_export "term_MFRS_MENU_CURRENT_STATE" env_import "$term_MFRS_MENU_CURRENT_STATE" tui-menu
  fi

  env_read_state "$term_MFRS_MENU_CURRENT_STATE" "key tui_MENU_RETURN_ITEM tui_MENU_RETURN_SELECTION"
  res="$tui_MENU_RETURN_ITEM"
}

#-------------------------------------------------------------------------------

env_init()
{
  if [ "$#" -lt "2" ]
  then
    exit 1
  fi

  REMOTE_HOST="$1"
  shift

  REMOTE_USER="$1"
  shift

  term_MFRS_DIR_START="$1"

  if [ -z "$RSUDO_PASSWORD" ]
  then
    if [ -t 0 ]
    then
      term_render tput rmcup
      echo "[rsudo] Enter password for ${REMOTE_HOST}@${REMOTE_USER}:" 1>&2
      # stty -echo
      read -r RSUDO_PASSWORD
      # stty echo
      term_render tput smcup
    else
      read -r RSUDO_PASSWORD
    fi
    export RSUDO_PASSWORD
  fi

  map term_MFRS_DIR_STATES

  init_menu_dir "$@"
}

render()
{
  eval env_export "term_MFRS_MENU_CURRENT_STATE" tui-menu $term_MFRS_MENU_DIR
}

key_loop()
{
  map term_MFRS_DIR_STATES put "$(pwd)" "$term_MFRS_MENU_CURRENT_STATE"
  env_read_state "$term_MFRS_MENU_CURRENT_STATE" "key tui_MENU_RETURN_ITEM tui_MENU_RETURN_SELECTION"
  res="$tui_MENU_RETURN_ITEM"

  while [ "$key" = "enter" ] && [ -n "$res" ]
  do
    term_region_clear
    load_menu_dir "$res"
  done
}

env_list_get()
{
  env_list "term_ROW\|term_COL\|term_MFRS_"
}

env_result()
{
  tui_MENU_RETURN_GLOBAL_SELECTION=""

  eval set -- $(map term_MFRS_DIR_STATES keys)

  for k in "$@"
  do
    state="$(map term_MFRS_DIR_STATES get "$k")"
    tui_MENU_RETURN_SELECTION=""
    env_read_state "$state" "tui_MENU_RETURN_SELECTION"
    tui_MENU_RETURN_GLOBAL_SELECTION="$tui_MENU_RETURN_GLOBAL_SELECTION $tui_MENU_RETURN_SELECTION"
  done

  term_output quote "${key}"
  term_output printf " "
  term_output quote "${tui_MENU_RETURN_ITEM}"
  term_output printf " "
  term_output quote "${tui_MENU_RETURN_GLOBAL_SELECTION}"
  # term_output printf "${tui_MENU_RETURN_GLOBAL_SELECTION}"
}

#-------------------------------------------------------------------------------

. tui-main.src.sh
