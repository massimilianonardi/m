#!/bin/sh

#-------------------------------------------------------------------------------

. env.lib.sh
. term.lib.sh
. array.lib.sh
. map.lib.sh
. menu.lib.sh

#-------------------------------------------------------------------------------

init_menu_dir()
{
  if [ ! -d "$1" ]
  then
    return 1
  fi

  cd "$1"
  set -- "$(cd -L -- "$1" && pwd -L)"

  array term_FS_DIR_ARRAY

  if [ "$(pwd)" = "/" ]
  then
    set -- ""
  else
    array term_FS_DIR_ARRAY add "${1}/..=.."
  fi

  # for k in ..?* .[!.]* *
  # do
  #   if [ -e "$k" ]
  #   then
  #     # array term_FS_DIR_ARRAY add "${1}/$k=$k"
  #     if [ -d "$k" ]
  #     then
  #       array term_FS_DIR_ARRAY add "${1}/$k=[D] $k"
  #     elif [ -f "$k" ]
  #     then
  #       array term_FS_DIR_ARRAY add "${1}/$k=[F] $k"
  #     fi
  #   fi
  # done

  for k in ..?* .[!.]* *
  do
    if [ -d "$k" ]
    then
      array term_FS_DIR_ARRAY add "${1}/$k=[D] $k"
    fi
  done

  for k in ..?* .[!.]* *
  do
    if [ -f "$k" ]
    then
      array term_FS_DIR_ARRAY add "${1}/$k=[F] $k"
    fi
  done

  term_FS_MENU_DIR="$(array term_FS_DIR_ARRAY get)"

  array term_FS_DIR_ARRAY unset
}

load_menu_dir()
{
  if [ ! -d "$1" ]
  then
    set -- "$(pwd)"
  fi

  cd "$1"
  set -- "$(cd -L -- "$1" && pwd -L)"

  term_FS_MENU_CURRENT_STATE="$(map term_FS_DIR_STATES get "$(pwd)")"

  if [ -z "$term_FS_MENU_CURRENT_STATE" ]
  then
    init_menu_dir "$@"
    eval env_export "term_FS_MENU_CURRENT_STATE" tui-menu $term_FS_MENU_DIR
    map term_FS_DIR_STATES put "$(pwd)" "$term_FS_MENU_CURRENT_STATE"
  else
    env_export "term_FS_MENU_CURRENT_STATE" env_import "$term_FS_MENU_CURRENT_STATE" tui-menu
  fi

  env_read_state "$term_FS_MENU_CURRENT_STATE" "key tui_MENU_RETURN_ITEM tui_MENU_RETURN_SELECTION"
  res="$tui_MENU_RETURN_ITEM"
}

#-------------------------------------------------------------------------------

env_init()
{
  map term_FS_DIR_STATES

  init_menu_dir "$@"
}

render()
{
  # eval KEY_LOOP="false" env_export "term_FS_MENU_CURRENT_STATE" tui-menu $term_FS_MENU_DIR
  eval env_export "term_FS_MENU_CURRENT_STATE" tui-menu $term_FS_MENU_DIR
}

key_loop()
{
  map term_FS_DIR_STATES put "$(pwd)" "$term_FS_MENU_CURRENT_STATE"
  env_read_state "$term_FS_MENU_CURRENT_STATE" "key tui_MENU_RETURN_ITEM tui_MENU_RETURN_SELECTION"
  res="$tui_MENU_RETURN_ITEM"

  while [ "$key" = "enter" ] && [ -n "$res" ]
  do
    term_region_clear
    load_menu_dir "$res"
  done
}

env_list_get()
{
  env_list "term_ROW\|term_COL\|term_FS_"
}

env_result()
{
  tui_MENU_RETURN_GLOBAL_SELECTION=""

  eval set -- $(map term_FS_DIR_STATES keys)

  for k in "$@"
  do
    state="$(map term_FS_DIR_STATES get "$k")"
    tui_MENU_RETURN_SELECTION=""
    env_read_state "$state" "tui_MENU_RETURN_SELECTION"
    tui_MENU_RETURN_GLOBAL_SELECTION="$tui_MENU_RETURN_GLOBAL_SELECTION $tui_MENU_RETURN_SELECTION"
  done

  term_output quote "${key}"
  term_output printf " "
  term_output quote "${tui_MENU_RETURN_ITEM}"
  term_output printf " "
  term_output quote "${tui_MENU_RETURN_GLOBAL_SELECTION}"
  # term_output printf "${tui_MENU_RETURN_GLOBAL_SELECTION}"
}

#-------------------------------------------------------------------------------

. tui-main.src.sh
