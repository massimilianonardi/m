# system update
apt-get update
apt-get upgrade



# system conf alternative to apache redirect
#iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
##iptables -t nat -D PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080

iptables -t nat -nvxL --line-numbers

iptables -t nat -L
iptables -t nat -Lnv

iptables -vL -t filter
iptables -vL -t nat
iptables -vL -t mangle
iptables -vL -t raw
iptables -vL -t security

iptables -t nat -D PREROUTING 1


#apache
apt-get install apache2

a2enmod proxy
a2enmod proxy_http

a2dissite 000-default
a2ensite 001-webgis

service apache2 restart

# apache hidden redirect
cat <<EOF>"/var/www/html/index.html"
<!DOCTYPE html>
<html style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: hidden;">
  <head>
    <title></title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
  </head>
  <body style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: hidden;">
    <iframe style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: auto;"></iframe>
    <script charset="UTF-8">
      //document.getElementsByTagName("iframe")[0].src = window.location.protocol + "//" + window.location.hostname + window.location.port + window.location.pathname + "/test";
      document.getElementsByTagName("iframe")[0].src = "https://" + window.location.hostname + ":8443/m";
    </script>
  </body>
</html>
EOF


# php
apt-get install php libapache2-mod-php php-mcrypt php-pgsql

echo "<?php phpinfo(); ?>" > /var/www/html/info.php
http://your_server_IP_address/info.php
less /var/log/apache2/error.log
less /var/log/apache2/access.log


# mapserver
apt-get install cgi-mapserver mapserver-bin mapserver-doc
mapserv -v

a2enmod cgi fcgid
service apache2 restart
http://localhost/cgi-bin/mapserv?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities

find /DATA/www/tmp/m_tmp -type f -exec rm {} \;

scp -r /DATA/www massimiliano.nardi@10.173.9.136:/tmp/www
scp -r /DATA/www massimiliano.nardi@10.173.9.137:/tmp/www

ssh massimiliano.nardi@10.173.9.136
ssh massimiliano.nardi@10.173.9.137
ssh massimiliano.nardi@10.173.9.169
ssh massimiliano.nardi@10.173.9.175


# mapcache
apt-get install mapcache-cgi libapache2-mod-mapcache


# geoserver
scp -r /DATA/geoserver_data massimiliano.nardi@10.173.9.137:/tmp/geoserver_data

IP_SOURCE="10.100.0.250"
IP_DEST="10.173.9.136"
IP_DEST="10.173.9.137"
find /m/data/webgis/geoserver_data -type f ! -name '*.jpg' ! -name '*.tif' ! -name '*.gif' ! -name '*.png' ! -name '*.pdf' ! -name '*.aux' ! -name '*.tfw' ! -name '*.dbf' ! -name '*.shx' ! -name '*.shp' ! -name '*.jgw' ! -name '*.prj' ! -name '*.qix' -exec sed -i "s/$IP_SOURCE/$IP_DEST/g" {} \;

IP_SOURCE="10.100.0.251"
IP_DEST="10.173.9.169"
IP_DEST="10.173.9.175"
find /m/data/webgis/geoserver_data -type f ! -name '*.jpg' ! -name '*.tif' ! -name '*.gif' ! -name '*.png' ! -name '*.pdf' ! -name '*.aux' ! -name '*.tfw' ! -name '*.dbf' ! -name '*.shx' ! -name '*.shp' ! -name '*.jgw' ! -name '*.prj' ! -name '*.qix' -exec sed -i "s/$IP_SOURCE/$IP_DEST/g" {} \;

IP_SOURCE="host_db"
IP_SOURCE="10.100.0.251"
IP_DEST="127.0.0.1"
find /m/data/geoserver -type f -exec sed -i "s/$IP_SOURCE/$IP_DEST/g" {} \;
find /m/data/webgis -type f ! -name '*.jpg' ! -name '*.tif' ! -name '*.gif' ! -name '*.png' ! -name '*.pdf' ! -name '*.aux' ! -name '*.tfw' ! -name '*.dbf' ! -name '*.shx' ! -name '*.shp' ! -name '*.jgw' ! -name '*.prj' ! -name '*.qix' -exec sed -i "s/$IP_SOURCE/$IP_DEST/g" {} \;
IP_SOURCE="\/DATA\/geoserver_raster"
IP_DEST="\/m\/data\/geoserver_raster"
find /m/data/geoserver -type f -exec sed -i "s/$IP_SOURCE/$IP_DEST/g" {} \;

service geoserver restart



# postgres
cd /m/data/postgres_bak; dropdb WEBGIS; createdb WEBGIS; psql -d WEBGIS -c "CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology;"; psql -d WEBGIS -f pg_db_bak_WEBGIS.sql 1>stdout.log 2>stderr.log
CREATE USER admin WITH SUPERUSER PASSWORD 'Admin2019';
ALTER USER admin with CREATEROLE;
ALTER USER admin with CREATEDB;
\du
\l
drop database "WEBGIS";
create database "WEBGIS";
\c "WEBGIS";
CREATE EXTENSION postgis;
CREATE EXTENSION postgis_topology;
select PostGIS_full_version();
CREATE ROLE "WEBGIS" NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION;
CREATE ROLE webgis LOGIN ENCRYPTED PASSWORD 'md5d39eb0e75d22d9f5976a76e7a97f70ac' NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION;
GRANT "WEBGIS" TO webgis;
CREATE ROLE nic LOGIN ENCRYPTED PASSWORD 'md52e404807bfb60b1e6b61ca840a7f7dc7' NOSUPERUSER NOINHERIT NOCREATEDB NOCREATEROLE NOREPLICATION;

su postgres --preserve-environment -s /bin/sh <<'EOF'
cd /m/data/postgres_bak
dropdb WEBGIS
createdb WEBGIS
psql -d WEBGIS -c "CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology; SELECT PostGIS_full_version();"
psql -d WEBGIS -c "CREATE ROLE "WEBGIS" NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION;"
psql -d WEBGIS -c "CREATE ROLE webgis LOGIN ENCRYPTED PASSWORD 'md5d39eb0e75d22d9f5976a76e7a97f70ac' NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION;"
psql -d WEBGIS -c "GRANT "WEBGIS" TO webgis;"
psql -d WEBGIS -c "CREATE ROLE nic LOGIN ENCRYPTED PASSWORD 'md52e404807bfb60b1e6b61ca840a7f7dc7' NOSUPERUSER NOINHERIT NOCREATEDB NOCREATEROLE NOREPLICATION;"
psql -d WEBGIS -f pg_db_bak_WEBGIS.sql 1>stdout.log 2>stderr.log
EOF

su postgres --preserve-environment -s /bin/sh <<'EOF'
cd /m/data/postgres_bak
dropdb WEBGIS
psql -c "create database "WEBGIS"; \c "WEBGIS"; select PostGIS_full_version(); CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology;"
psql -d WEBGIS -f pg_db_bak_WEBGIS.sql 1>stdout.log 2>stderr.log
EOF





# system install
apt-get install -y apache2
apt-get install -y tomcat8
#apt-get install -y libservlet3.1-java
apt-get install -y postgresql postgresql-client
apt-get install -y postgis



# custom install alternative jdk
custom_java_name="jdk1.8.0_91"
custom_java_package_name="jdk-8u91-linux-x64.gz"
rm /usr/lib/jvm/default-java
ln -sfn /usr/lib/jvm/$custom_java_name /usr/lib/jvm/default-java
cd /tmp
tar xvf $custom_java_package_name
mkdir /usr/lib/jvm/
mv ./$custom_java_name /usr/lib/jvm/
update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/$custom_java_name/bin/java" 1000
update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/$custom_java_name/bin/javac" 1000
update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/lib/jvm/$custom_java_name/bin/javaws" 1000
chown -R root:root /usr/lib/jvm/$custom_java_name
update-alternatives --config java
update-alternatives --config javac
update-alternatives --config javaws
ln -sfn /usr/lib/jvm/$custom_java_name /usr/lib/jvm/default-java
java -version
rm /tmp/$custom_java_package_name



# apache redirect
index_file="/var/www/html/index.html"
echo '<!DOCTYPE html>' > $index_file
echo '<html style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: hidden;">' >> $index_file
echo '  <head>' >> $index_file
echo '    <title></title>' >> $index_file
echo '    <meta charset="UTF-8">' >> $index_file
echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> $index_file
echo '  </head>' >> $index_file
echo '  <body style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: hidden;">' >> $index_file
echo '    <iframe src="webapp/page.jsp?main=true" style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: auto;"></iframe>' >> $index_file
echo '  </body>' >> $index_file
echo '</html>' >> $index_file
index_file="/var/www/html/webapp/page.jsp"
mkdir -p "/var/www/html/webapp"
echo '<!DOCTYPE html>' > $index_file
echo '<html style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: hidden;">' >> $index_file
echo '  <head>' >> $index_file
echo '    <title></title>' >> $index_file
echo '    <meta charset="UTF-8">' >> $index_file
echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> $index_file
echo '    <script charset="UTF-8">if(window.location.port === "" || window.location.port === 80 || window.location.port === "80"){window.location.port = 8080;} window.m_sys_browser_main = true;</script>' >> $index_file
echo '  </head>' >> $index_file
echo '  <body style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: hidden;">' >> $index_file
echo '    <iframe src="page.html?main=true" style="width: 100%; height: 100%; border: 0; margin: 0; padding: 0; overflow: auto;"></iframe>' >> $index_file
echo '  </body>' >> $index_file
echo '</html>' >> $index_file



# postgres
ipaddresses="*"
ip_client="10.1.0.XX"
sed -i 's/#listen_addresses = \x27localhost\x27/listen_addresses = \x27'$ipaddresses'\x27/g' /etc/postgresql/*/main/postgresql.conf
sed -i 's/^host    all             all             127.0.0.1\/32            md5/host    all             all             127.0.0.1\/32            md5\nhost    all             all             '$ip_client'\/32            md5/g' /etc/postgresql/*/main/pg_hba.conf
su postgres --preserve-environment -c "psql <<SQL
BEGIN;
alter user postgres with password 'postgres_password';
COMMIT;
SQL"
service postgresql restart



# tomcat
pg_jdbc_name="postgresql-42.1.4.jar"
pg_jdbc_link="postgresql.jdbc42.jar"
cd /usr/share/java
sudo wget "https://jdbc.postgresql.org/download/$pg_jdbc_name"
sudo ln -s $pg_jdbc_name $pg_jdbc_link
cd /usr/share/tomcat8/lib/
sudo ln -s ../../java/$pg_jdbc_link $pg_jdbc_link
sed -i 's/<Realm className="org.apache.catalina.realm.UserDatabaseRealm"/<Realm className="org.apache.catalina.realm.JDBCRealm" debug="99" driverName="org.postgresql.Driver" connectionURL="jdbc:postgresql:\/\/127.0.0.1\/system" digest="MD5" connectionName="postgres" connectionPassword="postgres_password" userTable="auth.users" userNameCol="username" userCredCol="password" userRoleTable="auth.users_roles_view" roleNameCol="role"\/>/g' /etc/tomcat8/server.xml
sed -i 's/               resourceName="UserDatabase"\/>//g' /etc/tomcat8/server.xml
service tomcat8 restart
















createuser -P $username
createdb -O $username $dbname
psql -c "CREATE EXTENSION adminpack;" $dbname
psql -c "CREATE EXTENSION postgis; CREATE EXTENSION postgis_topology;" $dbname

cat $filename | gunzip | psql $dbname 2>/var/tmp/webgis_postgres_dbimport_error.log 1>/var/tmp/webgis_postgres_dbimport.log



//------------------------------------------------------------------------------


COPY pdz_mon.allegati(pdz, tipo, id_area, file, parte, cat, tipo_atto, atto, argomento, operatori) FROM '/tmp/Tabella Delibera_DEF_mod.csv' (FORMAT csv, DELIMITER ';', HEADER, QUOTE '"', ENCODING 'WIN1250');
COPY pdz_mon.allegati(pdz, tipo, id_area, file, parte, cat, tipo_atto, atto, argomento, operatori) FROM '/tmp/Tabella Delibera_DEF_mod.csv' (FORMAT csv, DELIMITER ';', HEADER, QUOTE '"', ENCODING 'UTF8');
COPY pdz_mon.allegati(pdz, tipo, id_area, file, parte, cat, tipo_atto, atto, argomento, operatori) FROM '/tmp/Tabella Delibera_DEF_mod.txt' (FORMAT csv, DELIMITER E'\t', HEADER, QUOTE '"', ENCODING 'WIN1250');
COPY pdz_mon_allegati(pdz, pdz_descr, cat, pdz_tot, tipo_atto, atto, argomento, operatori, tipo, id_area, parte, file) FROM '/tmp/Tabella Delibera_DEF_new_mod.csv' (FORMAT csv, DELIMITER ';', HEADER false, QUOTE '"', ENCODING 'UTF8');

COPY pdz_mon_allegati(pdz, pdz_descr, cat, pdz_tot, tipo_atto, atto, data_atto, argomento, operatori, tipo, id_area, parte, file) FROM '/tmp/allegati.csv' (FORMAT csv, DELIMITER ';', HEADER false, QUOTE '"', ENCODING 'UTF8');

//------------------------------------------------------------------------------

ctid is the physical location of the row version within its table. row's ctid will change if it is updated or moved by VACUUM FULL.


similar to the AUTO_INCREMENT property supported by some other databases:

CREATE TABLE tablename (
    colname SERIAL
);
is equivalent to specifying:

CREATE SEQUENCE tablename_colname_seq;
CREATE TABLE tablename (
    colname integer NOT NULL DEFAULT nextval('tablename_colname_seq')
);
ALTER SEQUENCE tablename_colname_seq OWNED BY tablename.colname;



select resource from auth_policies where 'data.default_ds.public.config.test' like concat(resource, '%')
select resource from auth_policies where 'data.default_ds.public.config.test' like resource || '%'



//------------------------------------------------------------------------------
// CHANGE PASSWORDS FOR LINUX USER postgres AND DATABASE USER postgres
sudo passwd postgres
adminpostgres13

sudo su postgres -c psql template1
alter user postgres with password 'postgres13'



//------------------------------------------------------------------------------
// CONFIGURE POSTGRES TO ALLOW LOCALHOST CONNECTIONS
sudo nano /etc/postgresql/9.1/main/pg_hba.conf
host    all             all             127.0.0.1/32            trust
#host    all             all             127.0.0.1/32            md5

sudo /etc/init.d/postgresql restart



//------------------------------------------------------------------------------
// INSTALL POSTGRES JDBC DRIVER INTO TOMCAT
cd /usr/share/java
sudo wget http://jdbc.postgresql.org/download/postgresql-9.1-903.jdbc4.jar
sudo ln -s postgresql-9.1-903.jdbc4.jar postgresql.jdbc4.jar
cd /usr/share/tomcat7/lib/
sudo ln -s ../../java/postgresql-9.1-903.jdbc4.jar postgresql.jdbc4.jar



//------------------------------------------------------------------------------
// CREATE RPRWEBAPPS DATABASE
sudo -u postgres createdb rprwebapps
//sudo su postgres postgres -c psql rprwebapps
su postgres
psql rprwebapps



//------------------------------------------------------------------------------
// CREATE TABLES FOR TOMCAT AUTHENTICATION
DROP TABLE user_pscl_form_v1;
DROP TABLE users_force_password_change;
DROP TABLE user_roles;
DROP TABLE users;

CREATE TABLE users (
  username VARCHAR(255) NOT NULL PRIMARY KEY,
  password CHAR(32) NOT NULL
);

CREATE TABLE user_roles (
  username VARCHAR(255) NOT NULL,
  role VARCHAR(255) NOT NULL,
PRIMARY KEY (username, role),
FOREIGN KEY (username) REFERENCES users(username)
);

CREATE TABLE users_force_password_change (
  username VARCHAR(255) NOT NULL PRIMARY KEY,
FOREIGN KEY (username) REFERENCES users(username)
);

INSERT INTO users VALUES ('admin', md5('admin:rprwebapps_realm:rpr'));
INSERT INTO users VALUES ('utente1', md5('utente1:rprwebapps_realm:utente1'));
INSERT INTO user_roles VALUES ('admin', 'admin');
INSERT INTO user_roles VALUES ('admin', 'user');
INSERT INTO user_roles VALUES ('utente1', 'user');
INSERT INTO users_force_password_change VALUES ('admin');

INSERT INTO users VALUES ('utente0', md5('utente0:rprwebapps_realm:utente0'));
INSERT INTO user_roles VALUES ('utente0', 'user');
INSERT INTO users_force_password_change VALUES ('utente0');

INSERT INTO users VALUES ('utente1', md5('utente1:rprwebapps_realm:utente1'));
INSERT INTO user_roles VALUES ('utente1', 'user');
INSERT INTO users_force_password_change VALUES ('utente1');

INSERT INTO users VALUES ('utente2', md5('utente2:rprwebapps_realm:utente2'));
INSERT INTO user_roles VALUES ('utente2', 'user');
INSERT INTO users_force_password_change VALUES ('utente2');

INSERT INTO users VALUES ('utente3', md5('utente3:rprwebapps_realm:utente3'));
INSERT INTO user_roles VALUES ('utente3', 'user');
INSERT INTO users_force_password_change VALUES ('utente3');

 username |             password
----------+----------------------------------
 admin    | 976a2d0366669ded171b9a701007e4f9
 utente1  | 4216ce615b855929f95abf2c8d177e06

// NB MD5 is calculated on: {username}:{realm}:{cleartext-password}



//------------------------------------------------------------------------------
sudo nano /etc/tomcat7/server.xml
        <Realm className="org.apache.catalina.realm.JDBCRealm" debug="99"
          driverName="org.postgresql.Driver"
          connectionURL="jdbc:postgresql://127.0.0.1/rprwebapps"
          digest="MD5"
          connectionName="postgres"
          userTable="users" userNameCol="username" userCredCol="password"
          userRoleTable="user_roles" roleNameCol="role"/>

sudo rm -R /var/lib/tomcat7/webapps/MoMaPSCL_UDAcq
sudo /etc/init.d/tomcat7 restart
sudo less /var/log/tomcat7/catalina.out
sudo less /var/log/postgresql/postgresql-9.1-main.log

fully authenticated connection version:
<Realm className="org.apache.catalina.realm.JDBCRealm" debug="99"
  driverName="org.postgresql.Driver"
  connectionURL="jdbc:postgresql://localhost/rprwebapps"
  connectionName="postgres"
  connectionPassword="postgres13"
  userTable="users" userNameCol="username" userCredCol="password"
  userRoleTable="user_roles" roleNameCol="role"
  digest="MD5"/>

the following will not work:
<Realm className="org.apache.catalina.realm.JDBCRealm" debug="99"
  driverName="org.postgresql.Driver"
  connectionURL="jdbc:postgresql://localhost/rprwebapps?user=postgres&password=postgres13"
  userTable="users" userNameCol="username" userCredCol="password"
  userRoleTable="user_roles" roleNameCol="role"
  digest="MD5"/>



//------------------------------------------------------------------------------

---

apt-get update
apt-get upgrade

apt-get install -y postgresql postgresql-contrib

apt-get install -y default-jdk

wget http://apache.panu.it/tomcat/tomcat-8/v8.0.30/bin/apache-tomcat-8.0.30.tar.gz

#create tomcat user, member of the tomcat group, home directory of /opt/tomcat (install dir), with a shell of /bin/false (so nobody can log into the account)
groupadd tomcat
useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat
mkdir /opt/tomcat
tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1
cd /opt/tomcat
chgrp -R tomcat conf
chmod g+rwx conf
chmod g+r conf/*
chown -R tomcat:tomcat webapps/
chown -R tomcat work/ temp/ logs/

#install tomcat upstart script with proper JAVA_HOME
update-alternatives --config java
nano /etc/init/tomcat.conf

description "Tomcat Server"

  start on runlevel [2345]
  stop on runlevel [!2345]
  respawn
  respawn limit 10 5

  setuid tomcat
  setgid tomcat

  env JAVA_HOME=/usr/lib/jvm/default-java/jre
  env CATALINA_HOME=/opt/tomcat

  # Modify these options as needed
  env JAVA_OPTS="-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom"
  env CATALINA_OPTS="-Xms512M -Xmx1024M -server -XX:+UseParallelGC"

  exec $CATALINA_HOME/bin/catalina.sh run

  # cleanup temp directory after stop
  post-stop script
    rm -rf $CATALINA_HOME/temp/*
  end script

#in the above script edit properly JAVA_HOME and CATALINA_OPTS
initctl reload-configuration
initctl start tomcat

tar xvf jdk-8u65-linux-x64.gz
mkdir -p /usr/lib/jvm
mv ./jdk1.8.0_65 /usr/lib/jvm/
update-alternatives --install "/usr/bin/java" "java" "/usr/lib/jvm/jdk1.8.0_65/bin/java" 1
update-alternatives --install "/usr/bin/javac" "javac" "/usr/lib/jvm/jdk1.8.0_65/bin/javac" 1
update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/lib/jvm/jdk1.8.0_65/bin/javaws" 1
chmod a+x /usr/bin/java
chmod a+x /usr/bin/javac
chmod a+x /usr/bin/javaws
chown -R root:root /usr/lib/jvm/jdk1.8.0_65
ln -sfn /usr/lib/jvm/jdk1.8.0_65 /usr/lib/jvm/default-java
update-alternatives --config java
update-alternatives --config javac
update-alternatives --config javaws
java -version
