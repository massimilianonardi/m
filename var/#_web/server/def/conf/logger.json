[
  {
    "class": "m.log.Log",
    "ifaces": ["m.log.Log"],
    "params":
    {
      "level": "info",
      "logger":
      {
        "class": "m.log.LogLineStandardOutput",
        "class": "m.log.LogFilter",
        "params":
        {
          "logger":
          {
            "class": "m.log.LogLineStandardOutput"
          },
          "caller":
          [
            "_app/m.auth.",
            "_app/m.auth.BaseAuthorizator",
            "_app/m.auth.BaseAuthorizationSession.",
            "_app/m.auth.BaseAuthorizationSession$",
            "_app/m.auth.BaseAuthorizationSession.authorize",
            "_app/m.auth.BaseAuthorizationSession.updateAuthorizations",
            "_app/m.auth.BaseAuthorizationSession.mergeAuthorizations",
            "_app/m.auth.BaseAuthorizationSessionProfiler",
            "_app/m.auth.BaseAuthorizationSessionProfiler$",
            "_app/m.auth.BaseAuthorizationSessionProfiler.profileChange",
            "_app/m.auth.BaseAuthorizationSessionProfiler.updateProfiles",
            "_app/m.auth.BaseAuthorizationSessionProfiler.profileChangeAdd",
            "_app/m.auth.BaseAuthorizationSessionProfiler.profileChangeRem",
            "_app/m.auth.BaseAuthorizationSessionProfiler.checkRule",
            "_app/m.auth.BaseAuthorizationSessionProfiler.checkTrigger",
            "_app/m.auth.BaseAuthorizationSessionProfiler.triggerDelayed",
            "_app/m.auth.BaseAuthorizationSessionProfiler.trigger",
            "_app/m.auth.FSBaseAuthorizationSessionProfiler",
            "app/m.service.",
            "_app/m.service.Authentication",
            "_app/m.service.Configuration",
            "app/m.service.Store",
            "app/m.service.StoreNode",
            "_app/m.service.ReverseProxy.",
            "_app/m.service.WebInclude.",
            "_app/m.file",
            "_app/m.enc",
            "_app/m.stream",
            "app/m.store",
            "_app/m.web.",
            "_app/m.web.WebObj",
            "_app/m.web.jetty.",
            "app/m.web.jetty.EmbeddedServer.",
            "_app/m.web.jetty.EmbeddedServer$",
            "_app/m.web.jetty.AuthorizationServiceHandler.",
            "app/m.web.jetty.AuthorizationServiceHandler.handle",
            "app/m.web.jetty.AuthorizationServiceHandler.execute",
            "_app/m.web.jetty.AuthorizationServiceHandler.getSession",
            "_app/m.web.jetty.AuthorizationServiceHandler.setSession",
            "app/m.web.jetty.AuthorizationServiceHandler.executionError",
            "_app/m.web.jetty.ServiceMapHandler.",
            "_app/m.web.jetty.JettyAbstractProxyServlet.",
            "_app/m.web.jetty.JettyAbstractProxyServlet.forwardTo",
            "_app/m.web.jetty.JettyAbstractProxyServlet.rewriteTarget",
            "app/m.Global",
            "app/m.Main",
            "_app/"
          ]
        }
      }
    }
  }
]
