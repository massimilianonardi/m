#!/bin/sh

#-------------------------------------------------------------------------------

main()
{
  case "$1" in
    "copy") COMMAND="cp";;
    "move") COMMAND="mv";;
    *) log_fatal "wrong command: '$1'"; exit 1;;
  esac

  shift

  if [ "$#" -lt "2" ]
  then
    log_fatal "missing arguments"
    exit 1
  fi

  if [ -n "$SWITCH_e" ] && [ -n "$SWITCH_E" ]
  then
    log_fatal "colliding switches -e and -E specified"
    exit 1
  fi

  if [ -n "$SWITCH_e" ] && [ -n "$SWITCH_T" ]
  then
    log_fatal "colliding switches -e and -T specified"
    exit 1
  fi

  if [ -n "$SWITCH_T" ] && [ -n "$SWITCH_E" ]
  then
    log_fatal "colliding switches -T and -E specified"
    exit 1
  fi

  if [ -n "$SWITCH_e" ] && [ -n "$SWITCH_f" ]
  then
    log_fatal "colliding switches -e and -f specified"
    exit 1
  fi

  COUNT="1"
  for k in "$@"
  do
    [ "$((COUNT))" -lt "$#" ] && set -- "$@" "$k" || DEST="$k"
    shift
    COUNT="$((COUNT + 1))"
  done
  unset k
  unset COUNT

  log_debug "$COMMAND: SWITCHES:$ARGS_SWITCHES - SOURCES=$@ - DESTINATION=$DEST"

  if [ -z "$SWITCH_T" ]
  then
    DEST_DIR="$DEST"
  else
    if [ "$#" != "1" ]
    then
      log_fatal "transform switch -T can be applied to exactly two args"
      exit 1
    fi
    DEST_DIR="$(dirname "$DEST")"
  fi

  if [ -e "$DEST_DIR" ]
  then
    if [ -d "$DEST_DIR" ]
    then
      if [ -n "$(ls -A "$DEST_DIR")" ]
      then
        if [ -n "$SWITCH_e" ]
        then
          log_fatal "destination directory '$DEST_DIR' does exist, but is not empty and -e was specified"
          exit 1
        elif [ -n "$SWITCH_E" ]
        then
          log_info "deleting everything inside directory '$DEST_DIR' because -E was specified"
          for k in "$DEST_DIR"/..?* "$DEST_DIR"/.[!.]* "$DEST_DIR"/*
          do
            if [ -e "$k" ] || [ -L "$k" ]
            then
              rm -rf "$k"
            fi
          done
        else
          for k in "$@"
          do
            f="${DEST_DIR}/$(basename "$k")"
            log_fatal "dest dir is not empty ARGS: $@, k=$k, now checking if destination '$f' exists"
            if [ -e "$f" ]
            then
              if [ -n "$SWITCH_f" ]
              then
                log_trace "$f exist, but will be replaced because -f"
                rm -rf "$f"
              elif [ -z "$SWITCH_T" ]
              then
                log_fatal "destination '$f' exists and -f was not specified"
                exit 1
              fi
            fi
          done
          unset k
        fi
      fi
    else
      log_fatal "destination '$DEST_DIR' exists but is not a directory"
      exit 1
    fi
  else
    if [ -n "$SWITCH_c" ]
    then
      log_trace "destination directory does not exist, but -c was specified. creating destination directory..."
      mkdir -p "$DEST_DIR"
    else
      log_fatal "destination directory does not exist and -c was not specified"
      exit 1
    fi
  fi

  if [ -n "$SWITCH_T" ]
  then
    if [ -e "$DEST" ]
    then
      if [ -n "$SWITCH_f" ]
      then
        rm -rf "$DEST"
      else
        log_fatal "renamed destination exists and -f was not specified"
        exit 1
      fi
    fi
  fi

  if [ "$COMMAND" = "cp" ]
  then
    COMMAND_SWITCHES="r"
  fi

  if [ -n "$SWITCH_f" ]
  then
    COMMAND_SWITCHES="${COMMAND_SWITCHES}f"
  fi

  if [ -n "$SWITCH_T" ]
  then
    COMMAND_SWITCHES="${COMMAND_SWITCHES}T"
    log_trace "$COMMAND -${COMMAND_SWITCHES} $@ $DEST"
    "$COMMAND" -"${COMMAND_SWITCHES}" "$@" "$DEST"
  elif [ -n "$COMMAND_SWITCHES" ]
  then
    log_trace "$COMMAND -${COMMAND_SWITCHES} -t $DEST $@"
    "$COMMAND" -"${COMMAND_SWITCHES}" -t "$DEST" "$@"
  else
    log_trace "$COMMAND -t $DEST $@"
    "$COMMAND" -t "$DEST" "$@"
  fi
}

#-------------------------------------------------------------------------------

ARGS_PARSE="true"
ARGS_SWITCHES="ceEfT"

. m.lib

#-------------------------------------------------------------------------------
