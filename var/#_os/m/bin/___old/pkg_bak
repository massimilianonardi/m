#!/bin/bash

#-------------------------------------------------------------------------------

findver()
(
  parse_pkg_ver_range "$1"

  for k in $(find "$PKG_NAME/$PKG_PLATFORM/*")
  do
    VERSION="${k##*/}"
    VERSION="${VERSION#$k}"
    echo | awk "\"$PKG_VER_MIN\" <= \"$VERSION\" && \"$VERSION\" <= \"$PKG_VER_MAX\" {print \"$k\"}"
  done
)

#-------------------------------------------------------------------------------

depend()
(
  parse_pkg "$1"

  for k in $(net stream "$NET_M_PKG_DIR/$PKG_NAME/$PKG_PLATFORM/$PKG_VERSION/sys/depend")
#  for k in $(net stream "$1/sys/depend")
  do
    depend "$(depend_match_max "$k")"
  done

  echo "$PKG_NAME/$PKG_PLATFORM/$PKG_VERSION"
#  echo "$1"
)

#-------------------------------------------------------------------------------

depend_match_max()
(
  parse_pkg_ver_range "$1"

  echo "$PKG_NAME/$PKG_PLATFORM/$PKG_VER_MAX"
)

#-------------------------------------------------------------------------------

dependinstalled()
(
  parse_pkg "$1"

  for k in $(net stream "$NET_M_PKG_DIR/$PKG_NAME/$PKG_PLATFORM/$PKG_VERSION/sys/depend")
  do
    dependinstalled "$(depend_match_installed "$k")"
  done

  echo "$PKG_NAME/$PKG_PLATFORM/$PKG_VERSION"
)

#-------------------------------------------------------------------------------

depend_match_installed()
(
  parse_pkg_ver_range "$1"

# if vermax is not installed but installed one acceptable then log warn
# forces one response and thus prevents ramifications
  echo "$PKG_NAME/$PKG_PLATFORM/$PKG_VER_MAX"
)

#-------------------------------------------------------------------------------

find_missing()
(
  find $(missing "$@")
)

#-------------------------------------------------------------------------------

missing()
(
  if [ "$#" -lt "1" ]
  then
    fatal "missing missing argument/s"
  fi

  for k in "$@"
  do
  (
    parse_pkg "$k"
    if [ ! -d "$INSTALL_DIR" ]
    then
      echo "$k"
    fi
  )
  done
)

#-------------------------------------------------------------------------------

loop_simple()
(
  if [ "$#" -lt "2" ] || [ -z "$1" ]
  then
    log_fatal "wrong arguments: $@"
    exit 1
  fi

  COMMAND="$1"
  shift
  for k in "$@"
  do
    "$COMMAND" "$k"
  done
)

#-------------------------------------------------------------------------------

loop_find()
(
  if [ "$#" -lt "3" ] || [ -z "$1" ] || [ -z "$2" ]
  then
    log_fatal "wrong arguments: $@"
    exit 1
  fi

  LIST_COMMAND="$1"
  shift
  COMMAND="$1"
  shift
  for k in $("$LIST_COMMAND" "$@")
  do
    "$COMMAND" "$k"
  done
)

#-------------------------------------------------------------------------------

installed()
(
  log_debug "installed $@"
  if [ "$#" = "1" ] && [ "$1" = "." ]
  then
    for k in "$PKG_DIR/"*
    do
      if [ "$k" = "$PKG_DIR/*" ]
      then
        log_trace "no pkg installed!"
        break
      fi
      echo "${k#$PKG_DIR/}"
    done
  else
    for k in "$@"
    do
     for h in "$PKG_DIR/"*${k}*
     # for h in "$PKG_DIR/"*"$k"*
      # for h in "$PKG_DIR/"$k
      do
       # if [ "$h" = "$PKG_DIR/*${k}*" ]
        if [ ! -e "$h" ]
        then
          log_trace "pkg search did not match *${k}*"
          break
        fi
        echo "${h#$PKG_DIR/}"
      done
    done
  fi
)

#-------------------------------------------------------------------------------
