#!/bin/sh

#-------------------------------------------------------------------------------

option_header()
{
  [ "$#" != "1" ] && log_fatal "not any or too many header arguments $@" && exit 1
  OPT_HEADER="$1"
}

#-------------------------------------------------------------------------------

get()
{
  if command -V wget>/dev/null 2>&1
  then
    CMD="wget"
    OPT_FILE="-O"
    OPT_EXTRA="-c"
    if [ -n "$SWITCH_q" ]
    then
      OPT_EXTRA="-qc"
    fi
  elif command -V curl>/dev/null 2>&1
  then
    CMD="curl"
    OPT_FILE="-o"
    OPT_EXTRA="--fail -j --location"
    if [ -n "$SWITCH_q" ]
    then
      OPT_EXTRA="-s $OPT_EXTRA"
    fi
  else
    log_fatal "cannot find wget or curl"
    exit 1
  fi

  log_debug "CMD: $CMD - OPT_FILE: $OPT_FILE - OPT_EXTRA: $OPT_EXTRA"

  if [ "$#" = "1" ]
  then
    set -- $OPT_EXTRA "$(url smart encode "$1")"
#    set -- $OPT_EXTRA "$1"
  elif [ "$#" = "2" ]
  then
    set -- "$OPT_FILE" "$2" $OPT_EXTRA "$(url smart encode "$1")"
#    set -- "$OPT_FILE" "$2" $OPT_EXTRA "$1"
  else
    log_fatal "wrong number of arguments $@"
    exit 1
  fi

  if [ -n "$OPT_HEADER" ]
  then
    set -- "--header" "$OPT_HEADER" "$@"
  fi

  log_debug "CMD: $CMD $@"

  "$CMD" "$@"
}

#-------------------------------------------------------------------------------

main()
{
  case "$1" in
    "get") true;;
    *) exit 1;;
  esac

  "$@"
}

#-------------------------------------------------------------------------------

ARGS_PARSE="true"
ARGS_SWITCHES="q"
ARGS_OPTION="header"
ARGS_OPTION_header="1"
ARGS_OPTION_header_FUNCTION="option_header"

. m.lib

#-------------------------------------------------------------------------------
