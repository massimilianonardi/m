#!/bin/sh

#-------------------------------------------------------------------------------

find()
(
  for k in $(find_pkg "$@")
  do
    log_info "${k#$NET_M_PKG_DIR/}"
    echo "${k#$NET_M_PKG_DIR/}"
#    echo "$k"
  done
)

#-------------------------------------------------------------------------------

find_pkg()
(
  for k in "$@"
  do
    net find "$NET_M_PKG_DIR/$k"
#    if [ "$k" = "${k#/}" ]
#    then
#      net find "$NET_M_PKG_DIR/$k"
#    else
#      net find "$k"
#    fi
  done
)

#-------------------------------------------------------------------------------

match_pkg()
{
  log_debug "match_pkg $@"

  parse_pkg "$1"

  if [ ! -d "$DATA_DIR/$PKG_NAME" ]
  then
    log_fatal "match_pkg - requested package not available: $@ - PKG_NAME=$PKG_NAME"
    exit 1
  fi

  if [ -z "$PKG_PLATFORM" ]
  then
    if [ -d "$DATA_DIR/$PKG_NAME/ver/all" ]
    then
      PKG_PLATFORM="all"
    elif [ -d "$DATA_DIR/$PKG_NAME/ver/$PLATFORM" ]
    then
      PKG_PLATFORM="$PLATFORM"
    else
      log_fatal "match_pkg - requested platform not available: $@ $(ls -lA "$DATA_DIR/$PKG_NAME/ver")"
      exit 1
    fi
  fi

  if [ ! -d "$DATA_DIR/$PKG_NAME/ver/$PKG_PLATFORM" ]
  then
    log_fatal "match_pkg - requested package/platform not available: $@ $(ls -lA "$DATA_DIR/$PKG_NAME/ver")"
    exit 1
  fi

  for k in "$DATA_DIR/$PKG_NAME/ver/$PKG_PLATFORM"/*
  do
    TMP_VERSION="${k##*/}"
    log_trace "match_pkg - $k - TMP_VERSION=$TMP_VERSION"
    if [ "$(compare_versions "$PKG_VER_MIN" "$TMP_VERSION")" -gt "-1" ] && [ "$(compare_versions "$TMP_VERSION" "$PKG_VER_MAX")" -gt "-1" ]
    then
      log_trace "match_pkg - MATCH: $PKG_NAME-$PKG_PLATFORM-$TMP_VERSION"
      PKG_VERSION="$TMP_VERSION"
    fi
  done

  # PACKAGE="$PKG_NAME-$PKG_PLATFORM-$PKG_VERSION"
  # INSTALL_DIR="$PKG_DIR/$PACKAGE"
  parse_pkg "$PKG_NAME/$PKG_PLATFORM/$PKG_VERSION"
}

#-------------------------------------------------------------------------------
