#!/bin/sh

#-------------------------------------------------------------------------------

integrate_postdownload()
{
  if [ -f "$INSTALL_DIR/sys/postdownload" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/postdownload"
    . "$INSTALL_DIR/sys/postdownload"
    if exist postdownload
    then
      postdownload
    fi
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/postdownload"
  fi
}

#-------------------------------------------------------------------------------

integrate_postinstall()
{
  if [ -f "$INSTALL_DIR/sys/postinstall" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/postinstall"
    . "$INSTALL_DIR/sys/postinstall"
    if exist postinstall
    then
      postinstall
    fi
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/postinstall"
  fi
}

#-------------------------------------------------------------------------------

rebuild_global_pkg_path()
{
  PKG_PATH_FILE_GLOBAL="$SYS_DIR/path/.path"

  mkdir -p "$SYS_DIR/path"
  printf '%s' "PATH=$PATH:" > "$PKG_PATH_FILE_GLOBAL"
  for k in $(ls -tr "$SYS_DIR/path")
  do
    log_trace "rebuild_global_pkg_path - file: $k"
    for h in $(cat "$SYS_DIR/path/$k")
    do
      log_trace "rebuild_global_pkg_path - file: $k - item: $h"
      printf '%s' "$h:" >> "$PKG_PATH_FILE_GLOBAL"
    done
  done
  echo "\$PATH" >> "$PKG_PATH_FILE_GLOBAL"
}

#-------------------------------------------------------------------------------

integrate_path()
{
  PKG_PATH_FILE="$SYS_DIR/path/${PACKAGE}.path"

  if [ -f "$INSTALL_DIR/sys/path" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/path"
    mkdir -p "$SYS_DIR/path"
    for k in $(cat "$INSTALL_DIR/sys/path")
    do
      log_trace "add PATH: \$PKG_DIR/$PACKAGE/$k"
      echo "\$PKG_DIR/$PACKAGE/$k" >> "$PKG_PATH_FILE"
    done
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/path"
  fi

  rebuild_global_pkg_path
}

#-------------------------------------------------------------------------------

rebuild_global_pkg_env()
{
  PKG_ENV_FILE_GLOBAL="$SYS_DIR/env/.env"

  mkdir -p "$SYS_DIR/env"
  cat "$SYS_DIR/env"/* > "$PKG_ENV_FILE_GLOBAL"
}

#-------------------------------------------------------------------------------

integrate_env()
{
  PKG_ENV_FILE="$SYS_DIR/env/${PACKAGE}.env"

  if [ -f "$INSTALL_DIR/sys/env" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/env"
    mkdir -p "$SYS_DIR/env"
    cat "$INSTALL_DIR/sys/env" | sed "s|\$INSTALL_DIR|\$PKG_DIR/$PACKAGE|g" | sed "s|\${INSTALL_DIR}|\$PKG_DIR/$PACKAGE|g" | sed "s|\$PACKAGE|$PACKAGE|g" | sed "s|\${PACKAGE}|$PACKAGE|g" >> "$PKG_ENV_FILE"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/env"
  fi

  rebuild_global_pkg_env
}

#-------------------------------------------------------------------------------

integrate_command()
{
  if [ -f "$INSTALL_DIR/sys/command" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/command"
    # while IFS="" read -r k <&3 || [ -n "$k" ]
    while IFS="" read -r k <&3
    do
      CMD_PATH="${k#*=}"
      CMD_ALIAS="${k%"$CMD_PATH"}"
      CMD_ALIAS="${CMD_ALIAS%=}"
      if [ -z "$CMD_ALIAS" ]
      then
        CMD_ALIAS="${CMD_PATH##*/}"
      fi
      log_trace "CMD_ALIAS: $CMD_ALIAS - CMD_PATH: $CMD_PATH"
      if [ "$PKG_PLATFORM" = "all" ]
      then
        log_trace "link $INSTALL_DIR/$CMD_PATH - $CMD_DIR/$CMD_ALIAS"
        lnk -cr "$INSTALL_DIR/$CMD_PATH" "$CMD_DIR/$CMD_ALIAS"
      else
        log_trace "link $INSTALL_DIR/$CMD_PATH - $CMD_DIR/$PKG_PLATFORM/$CMD_ALIAS"
        lnk -cr "$INSTALL_DIR/$CMD_PATH" "$CMD_DIR/$PKG_PLATFORM/$CMD_ALIAS"
      fi
    done 3< "$INSTALL_DIR/sys/command"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/command"
  fi
}

#-------------------------------------------------------------------------------

integrate_app()
{
  if [ -f "$INSTALL_DIR/sys/app" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/app"
    while IFS="" read -r k <&3
    do
      APP_PATH="${k#*=}"
      APP_ALIAS="${k%"$APP_PATH"}"
      APP_ALIAS="${APP_ALIAS%=}"
      if [ -z "$APP_ALIAS" ]
      then
        APP_ALIAS="${APP_PATH##*/}"
      fi
      log_trace "APP_ALIAS: $APP_ALIAS - APP_PATH: $APP_PATH"
      if [ "$PKG_PLATFORM" = "all" ]
      then
        log_trace "link $INSTALL_DIR/$APP_PATH - $APP_DIR/$APP_ALIAS"
        lnk -cr "$INSTALL_DIR/$APP_PATH" "$APP_DIR/$APP_ALIAS"
      else
        log_trace "link $INSTALL_DIR/$APP_PATH - $APP_DIR/$PKG_PLATFORM/$APP_ALIAS"
        lnk -cr "$INSTALL_DIR/$APP_PATH" "$APP_DIR/$PKG_PLATFORM/$APP_ALIAS"
      fi
    done 3< "$INSTALL_DIR/sys/app"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/app"
  fi
}

#-------------------------------------------------------------------------------

integrate_srv()
{
  if [ -f "$INSTALL_DIR/sys/srv" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/srv"
    IFS=$'\n'
#    for k in $(cat "$INSTALL_DIR/sys/srv")
#    do
#      IFS="$IFS_ORIG"
#      SRV_PATH="${k#*=}"
#      SRV_ALIAS="${k%"$SRV_PATH"}"
#      SRV_ALIAS="${SRV_ALIAS%=}"
#      if [ -z "$SRV_ALIAS" ]
#      then
#        SRV_ALIAS="${SRV_PATH##*/}"
#      fi
#      log_trace "SRV_ALIAS: $SRV_ALIAS - SRV_PATH: $SRV_PATH"
#      if [ "$PKG_PLATFORM" = "all" ]
#      then
#        log_trace "link $INSTALL_DIR/$SRV_PATH - $APP_DIR/$SRV_ALIAS"
#        lnk -cr "$INSTALL_DIR/$SRV_PATH" "$APP_DIR/$SRV_ALIAS"
#      else
#        log_trace "link $INSTALL_DIR/$SRV_PATH - $APP_DIR/$PKG_PLATFORM/$SRV_ALIAS"
#        lnk -cr "$INSTALL_DIR/$SRV_PATH" "$APP_DIR/$PKG_PLATFORM/$SRV_ALIAS"
#      fi
#      IFS=$'\n'
#    done
    IFS="$IFS_ORIG"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/srv"
  fi
}

#-------------------------------------------------------------------------------

integrate_lib()
{
  if [ -f "$INSTALL_DIR/sys/lib" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/lib"
    IFS=$'\n'
    for k in $(cat "$INSTALL_DIR/sys/lib")
    do
      IFS="$IFS_ORIG"
      LIB_PATH="${k#*=}"
      LIB_ALIAS="${k%"$LIB_PATH"}"
      LIB_ALIAS="${LIB_ALIAS%=}"
      if [ -z "$LIB_ALIAS" ]
      then
        LIB_ALIAS="${LIB_PATH##*/}"
      fi
      log_trace "LIB_ALIAS: $LIB_ALIAS - LIB_PATH: $LIB_PATH"
      if [ "$PKG_PLATFORM" = "all" ]
      then
        log_trace "link $INSTALL_DIR/$LIB_PATH - $LIB_DIR/$LIB_ALIAS"
        lnk -cfr "$INSTALL_DIR/$LIB_PATH" "$LIB_DIR/$LIB_ALIAS"
      else
        log_trace "link $INSTALL_DIR/$LIB_PATH - $LIB_DIR/$PKG_PLATFORM/$LIB_ALIAS"
        lnk -cfr "$INSTALL_DIR/$LIB_PATH" "$LIB_DIR/$PKG_PLATFORM/$LIB_ALIAS"
      fi
      IFS=$'\n'
    done
    IFS="$IFS_ORIG"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/lib"
  fi
}

#-------------------------------------------------------------------------------

integrate_depend()
{
  true
}

#-------------------------------------------------------------------------------

integrate_profile()
{
  work "$PACKAGE"
  [ -z "$(ls -qA "$CONF_DIR")" ] && reset_conf "$PACKAGE"
  [ -z "$(ls -qA "$DATA_DIR")" ] && reset_data "$PACKAGE"
  [ -z "$(ls -qA "$HOME_DIR")" ] && reset_home "$PACKAGE"
  true
}

#-------------------------------------------------------------------------------

integrate()
(
  # parse_pkg_installed "$1"

  integrate_postdownload
  integrate_path
  integrate_env
  integrate_command
  integrate_app
  # integrate_srv
  # integrate_lib
  # integrate_depend
  integrate_profile
  integrate_postinstall
)

#-------------------------------------------------------------------------------

deintegrate()
{
  parse_pkg_installed "$1"

#  work "$PACKAGE"
#  [ -z "$(ls -qA "$CONF_DIR")" ] && reset_conf "$1"
#  [ -z "$(ls -qA "$DATA_DIR")" ] && reset_data "$1"
#  [ -z "$(ls -qA "$HOME_DIR")" ] && reset_home "$1"
#  true

  if [ -f "$INSTALL_DIR/sys/path" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/path"
    for k in $(cat "$INSTALL_DIR/sys/path")
    do
      log_trace "removing PATH=\$PKG_DIR/$PACKAGE/$k:\$PATH"
      grep -vxF "PATH=\$PKG_DIR/$PACKAGE/$k:\$PATH" "$PATH_FILE" > "$PATH_FILE.tmp"
      mv "$PATH_FILE.tmp" "$PATH_FILE"
    done
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/path"
  fi

  if [ -f "$INSTALL_DIR/sys/env" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/env"
    cat "$INSTALL_DIR/sys/env" | sed "s/\${PACKAGE}/$PACKAGE/g">>"$ENV_FILE.diff"
    diff -w --old-line-format="" --unchanged-line-format="" --new-line-format="%L" "$ENV_FILE.diff" "$ENV_FILE" > "$ENV_FILE.tmp"
    while ! cmp -s "$ENV_FILE" "$ENV_FILE.tmp"
    do
      mv "$ENV_FILE.tmp" "$ENV_FILE"
      diff -w --old-line-format="" --unchanged-line-format="" --new-line-format="%L" "$ENV_FILE.diff" "$ENV_FILE" > "$ENV_FILE.tmp"
    done
    mv "$ENV_FILE.tmp" "$ENV_FILE"
    rm -f "$ENV_FILE.diff"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/env"
  fi

  IFS_ORIG="$IFS"
  if [ -f "$INSTALL_DIR/sys/command" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/command"
    IFS=$'\n'
    for k in $(cat "$INSTALL_DIR/sys/command")
    do
      IFS="$IFS_ORIG"
      CMD_PATH="${k#*=}"
      CMD_ALIAS="${k%"$CMD_PATH"}"
      CMD_ALIAS="${CMD_ALIAS%=}"
      if [ -z "$CMD_ALIAS" ]
      then
        CMD_ALIAS="${CMD_PATH##*/}"
      fi
      log_trace "CMD_ALIAS: $CMD_ALIAS - CMD_PATH: $CMD_PATH"
      if [ "$PKG_PLATFORM" = "all" ]
      then
        log_trace "link remove $INSTALL_DIR/$CMD_PATH - $CMD_DIR/$CMD_ALIAS"
        rm -f "$CMD_DIR/$CMD_ALIAS"
      else
        log_trace "link remove $INSTALL_DIR/$CMD_PATH - $CMD_DIR/$PKG_PLATFORM/$CMD_ALIAS"
        rm -f "$CMD_DIR/$PKG_PLATFORM/$CMD_ALIAS"
      fi
      IFS=$'\n'
    done
    IFS="$IFS_ORIG"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/command"
  fi

  if [ -f "$INSTALL_DIR/sys/app" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/app"
    IFS=$'\n'
    for k in $(cat "$INSTALL_DIR/sys/app")
    do
      IFS="$IFS_ORIG"
      APP_PATH="${k#*=}"
      APP_ALIAS="${k%"$APP_PATH"}"
      APP_ALIAS="${APP_ALIAS%=}"
      if [ -z "$APP_ALIAS" ]
      then
        APP_ALIAS="${APP_PATH##*/}"
      fi
      log_trace "APP_ALIAS: $APP_ALIAS - APP_PATH: $APP_PATH"
      if [ "$PKG_PLATFORM" = "all" ]
      then
        log_trace "link remove $INSTALL_DIR/$APP_PATH - $APP_DIR/$APP_ALIAS"
        rm -f "$APP_DIR/$APP_ALIAS"
# todo remove parent empty dirs
      else
        log_trace "link remove $INSTALL_DIR/$APP_PATH - $APP_DIR/$PKG_PLATFORM/$APP_ALIAS"
        rm -f "$APP_DIR/$PKG_PLATFORM/$APP_ALIAS"
# todo remove parent empty dirs
      fi
      IFS=$'\n'
    done
    IFS="$IFS_ORIG"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/app"
  fi

  if [ -f "$INSTALL_DIR/sys/srv" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/srv"
    IFS=$'\n'
#    for k in $(cat "$INSTALL_DIR/sys/srv")
#    do
#      IFS="$IFS_ORIG"
#      SRV_PATH="${k#*=}"
#      SRV_ALIAS="${k%"$SRV_PATH"}"
#      SRV_ALIAS="${SRV_ALIAS%=}"
#      if [ -z "$SRV_ALIAS" ]
#      then
#        SRV_ALIAS="${SRV_PATH##*/}"
#      fi
#      log_trace "SRV_ALIAS: $SRV_ALIAS - SRV_PATH: $SRV_PATH"
#      if [ "$PKG_PLATFORM" = "all" ]
#      then
#        log_trace "link remove $INSTALL_DIR/$SRV_PATH - $APP_DIR/$SRV_ALIAS"
#        rm -f "$APP_DIR/$SRV_ALIAS"
## todo remove parent empty dirs
#      else
#        log_trace "link remove $INSTALL_DIR/$SRV_PATH - $APP_DIR/$PKG_PLATFORM/$SRV_ALIAS"
#        rm -f "$APP_DIR/$PKG_PLATFORM/$SRV_ALIAS"
## todo remove parent empty dirs
#      fi
#      IFS=$'\n'
#    done
    IFS="$IFS_ORIG"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/srv"
  fi

  if [ -f "$INSTALL_DIR/sys/lib" ]
  then
    log_debug "processing package system file: $INSTALL_DIR/sys/lib"
    IFS=$'\n'
    for k in $(cat "$INSTALL_DIR/sys/lib")
    do
      IFS="$IFS_ORIG"
      LIB_PATH="${k#*=}"
      LIB_ALIAS="${k%"$LIB_PATH"}"
      LIB_ALIAS="${LIB_ALIAS%=}"
      if [ -z "$LIB_ALIAS" ]
      then
        LIB_ALIAS="${LIB_PATH##*/}"
      fi
      log_trace "LIB_ALIAS: $LIB_ALIAS - LIB_PATH: $LIB_PATH"
      if [ "$PKG_PLATFORM" = "all" ]
      then
        log_trace "link remove $INSTALL_DIR/$LIB_PATH - $LIB_DIR/$LIB_ALIAS"
        rm -f "$LIB_DIR/$LIB_ALIAS"
      else
        log_trace "link remove $INSTALL_DIR/$LIB_PATH - $LIB_DIR/$PKG_PLATFORM/$LIB_ALIAS"
        rm -f "$LIB_DIR/$PKG_PLATFORM/$LIB_ALIAS"
      fi
      IFS=$'\n'
    done
    IFS="$IFS_ORIG"
  else
    log_debug "package system file is not present: $INSTALL_DIR/sys/lib"
  fi
}

#-------------------------------------------------------------------------------
