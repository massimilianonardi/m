#!/bin/sh

#-------------------------------------------------------------------------------

mk_type_electron_target_build()
(
#  copy -f "$SOURCE_DIR"/* "$DIST_DIR"
#  trace call exit mk_file_import "$DIST_DIR"
  trace call exit mk_file_import_source "$DIST_DIR"
  
#  mkdir -p "$DIST_DIR"
  echo "#!/bin/sh"> "$DIST_DIR/$PROJECT"
  echo 'THIS_DIR="$(dirname "$(path -al "$0")")"'>> "$DIST_DIR/$PROJECT"
  echo 'export SVGA_VGPU10=0'>> "$DIST_DIR/$PROJECT"
  echo 'electron "$THIS_DIR" "$@"'>> "$DIST_DIR/$PROJECT"
  chmod +x "$DIST_DIR/$PROJECT"
  
#echo $DIST_DIR _________________________________________________________________
)

#-------------------------------------------------------------------------------

mk_type_electron_target_run()
{
#echo $INST_DIR $PKG_DIR $SYS_DIR
#  trace call exit "$DIST_DIR/$PROJECT"
  trace call exit "$PKG_DIR/$(echo "$PRJ_PATH" | sed 's|/|-|g')/bin/$PROJECT"
}

#-------------------------------------------------------------------------------

#mk_type_electron_target_test()
#{
#  trace call exit "$DIST_DIR/$PROJECT"
#}

#-------------------------------------------------------------------------------

mk_type_electron_target_install()
{
# todo support hotseex functionality by moving from dist to dist/bin and keeping relative links updated
#  mv "$DIST_DIR" "$DIST_DIR.tmp"
#  mkdir -p "$DIST_DIR"
#  mv "$DIST_DIR.tmp" "$DIST_DIR/bin"
  
  move -a "$DIST_DIR" "$DIST_DIR.tmp"
  mkdir -p "$DIST_DIR"
  move -act "$DIST_DIR.tmp" "$DIST_DIR/bin"
  
  DIST_SYS_DIR="$DIST_DIR/sys"
  
# todo copy libs option, cmd file only when main class (because jar exec and not jar lib) cmd for windows??? -> yes because even with cygwin java for windows has different cmd line
  mkdir -p "$DIST_SYS_DIR"
  echo "electron">"$DIST_SYS_DIR/depend"
  echo "all">"$DIST_SYS_DIR/platform"
  if [ -z "$NAME" ]
  then
    echo "$PROJECT">"$DIST_SYS_DIR/name"
  else
    echo "$NAME">"$DIST_SYS_DIR/name"
  fi
  PACKAGE="$(echo "$PRJ_PATH" | sed 's|/|-|g')"
#  echo "$PKG_GROUP-$PKG_ARTIFACT">"$DIST_SYS_DIR/path"
#  echo "$PKG_GROUP-$PKG_ARTIFACT">"$DIST_SYS_DIR/env"
  echo "$PACKAGE=bin/$PROJECT">"$DIST_SYS_DIR/command"
#  echo "java/$PACKAGE.jar=bin/$PROJECT.jar">"$DIST_SYS_DIR/lib"
#  echo "$PKG_ARTIFACT.jar=bin/$PKG_ARTIFACT-$PKG_VERSION.jar">>"$DIST_SYS_DIR/lib"
  if [ -z "$VERSION" ]
  then
    echo "latest">"$DIST_SYS_DIR/version"
  else
    echo "$VERSION">"$DIST_SYS_DIR/version"
  fi
  
#  if [ -z "$JAVA_MAIN_CLASS" ]
#  then
#    rm "$DIST_SYS_DIR/command"
#    rm "$DIST_DIR/$PROJECT"
#    rm "$DIST_DIR/$PROJECT".cmd
#  fi
}

#-------------------------------------------------------------------------------
