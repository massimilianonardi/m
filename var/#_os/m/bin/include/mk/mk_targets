#!/bin/sh

#-------------------------------------------------------------------------------

mk_target_clean_post()
{
  rm -fr "$BUILD_DIR"
  rm -fr "$DIST_DIR"
  rm -fr "$RUN_DIR"
  rm -fr "$TASK_DIR"
}

#-------------------------------------------------------------------------------

mk_target_build_ante()
{
  mkdir -p "$BUILD_DIR"
  mkdir -p "$DIST_DIR"
  mkdir -p "$TASK_DIR"
  
  if trace call return newer "$TASK_DIR/$TASK_BUILD_FILENAME" "$SOURCE_DIR" || trace call return newer "$TASK_DIR/$TASK_BUILD_FILENAME" "$MKCONF_DIR"
  then
    log_debug "+++ build needed +++"
  else
    log_info "+++ already built and up to date +++"
    TARGET_STOP="true"
  fi
}

#-------------------------------------------------------------------------------

mk_target_build()
{
#  trace call exit mk_file_import "$DIST_DIR"
  
  trace call exit mk_file_import_source "$DIST_DIR"
#  if [ -n "$DEPEND_SRC" ]; then trace call exit mk_file_import_external "$DIST_DIR" "$DEPEND_SRC" "imp"; fi
  if [ -n "$FILE_IMPORT" ]; then trace call exit mk_file_import_external "$DIST_DIR" "$FILE_IMPORT" "$FILE_IMPORT_OP"; fi
  if [ -n "$FILE_COPY" ]; then trace call exit mk_file_import_external "$DIST_DIR" "$FILE_COPY" "cpr"; fi
  if [ -n "$FILE_LINK" ]; then trace call exit mk_file_import_external "$DIST_DIR" "$FILE_LINK" "lnr"; fi
}

#-------------------------------------------------------------------------------

mk_target_build_post()
{
  mkdir -p "$TASK_DIR"
  touch "$TASK_DIR/$TASK_BUILD_FILENAME"
  log_trace "TASK_BUILD_FILE: $(ls -m "$TASK_DIR/$TASK_BUILD_FILENAME")"
}

#-------------------------------------------------------------------------------

mk_target_install_ante()
{
  log_trace "install dir - TARGET_PARAMS: $1 - INST_DIR: $INST_DIR"
  
  [ -n "$1" ] && INST_DIR="$1"
  
  if [ -n "$INST_DIR" ]
  then
    log_info "INST_DIR: $INST_DIR"
    
    mkdir -p "$INST_DIR"
    sys_root "$INST_DIR"
  fi
  
  trace call exit mk_target_dependprj_ante "install"
}

#-------------------------------------------------------------------------------

mk_target_install_post()
{
  PACKAGE="$(echo "$PRJ_PATH" | sed 's|/|-|g')"
  [ ! -d "$DIST_DIR" ] && return 0
  trace call exit imp "$DIST_DIR" "$PKG_DIR/$(basename "$PACKAGE")"
  trace call exit pkg integrate "$(basename "$PACKAGE")"
}

#-------------------------------------------------------------------------------

mk_target_run_ante()
{
  log_trace "run dir - TARGET_PARAMS: $1 - TEST_DIR: $TEST_DIR - RUN_DIR: $RUN_DIR - INST_DIR: $INST_DIR"
  
  if trace call return newer "$TASK_DIR/$TASK_RUN_FILENAME" "$DIST_DIR"
  then
    log_debug "+++ run update needed +++"
  else
    log_info "+++ ready to run +++"
    TARGET_STOP="true"
    trace call return mk_target_run_post
  fi
}

#-------------------------------------------------------------------------------

mk_target_run_post()
{
  mkdir -p "$TASK_DIR"
  touch "$TASK_DIR/$TASK_RUN_FILENAME"
  log_trace "TASK_RUN_FILE: $(ls -m "$TASK_DIR/$TASK_RUN_FILENAME")"
  
  [ -n "$RUN_CMD" ] && trace call exit $RUN_CMD || true
}

#-------------------------------------------------------------------------------

mk_target_testenv_export()
{
  log_trace "test dir - TARGET_PARAMS: $1 - TEST_DIR: $TEST_DIR - RUN_DIR: $RUN_DIR - INST_DIR: $INST_DIR"
  
  [ -n "$1" ] && INST_DIR="$1"
  [ -z "$INST_DIR" ] && INST_DIR="$TEST_DIR"
  [ -z "$INST_DIR" ] && INST_DIR="$RUN_DIR"
  
  log_debug "INST_DIR: $INST_DIR"
  
  mkdir -p "$INST_DIR"
  sys_root "$INST_DIR"
}

#-------------------------------------------------------------------------------

mk_target_testenvdeep_export()
{
  log_trace "test dir - TARGET_PARAMS: $1 - TEST_DIR: $TEST_DIR - RUN_DIR: $RUN_DIR - INST_DIR: $INST_DIR"
  
  [ -n "$1" ] && INST_DIR="$1"
  [ -z "$INST_DIR" ] && INST_DIR="$TEST_DIR"
  [ -z "$INST_DIR" ] && INST_DIR="$RUN_DIR"
  
  log_debug "INST_DIR: $INST_DIR"
  
  mkdir -p "$INST_DIR"
  sys_root "$INST_DIR"
  unset FIXED_BUILD_DIR FIXED_DIST_DIR FIXED_RUN_DIR FIXED_TASK_DIR
}

#-------------------------------------------------------------------------------

mk_target_test_ante()
{
  log_trace "test dir - TARGET_PARAMS: $1 - TEST_DIR: $TEST_DIR - RUN_DIR: $RUN_DIR - INST_DIR: $INST_DIR"
  
  [ -n "$1" ] && INST_DIR="$1"
  [ -z "$INST_DIR" ] && INST_DIR="$TEST_DIR"
  [ -z "$INST_DIR" ] && INST_DIR="$RUN_DIR"
  
  log_debug "INST_DIR: $INST_DIR"
  
  mkdir -p "$INST_DIR"
  sys_root "$INST_DIR"
#  unset INST_DIR
  trace exec exit mk_target install
}

#-------------------------------------------------------------------------------

mk_target_test_post()
{
  trace exec exit mk_target run
}

#-------------------------------------------------------------------------------

mk_target_depend_ante()
{
  trace call exit mk_target_dependpkg_ante
#  mk_target_dependpkg_ante
  trace call exit mk_target_dependprj_ante "depend build"
  trace call exit mk_target_dependsrc_ante "depend build"
  trace call exit mk_target_dependbuild_ante "depend build"
}

#-------------------------------------------------------------------------------

mk_target_depend_post()
{
#  trace call exit mk_file_import "$DIST_DIR"
  trace call exit mk_file_import_external "$BUILD_DIR" "$DEPEND_BUILD" "imp"
  trace call exit mk_file_import_external "$DIST_DIR" "$DEPEND_SRC" "imp"
}

#-------------------------------------------------------------------------------

mk_target_dependclean_ante()
{
  trace call exit mk_target_dependprj_ante "dependclean clean"
#  trace call exit mk_target_dependprjuninstall_ante
  trace call exit mk_target_dependsrc_ante "dependclean clean"
  trace call exit mk_target_dependbuild_ante "dependclean clean"
}

#-------------------------------------------------------------------------------

mk_target_dependpkg_ante()
{
  log_info "DEPEND_PKG: $DEPEND_PKG"
  [ -n "$DEPEND_PKG" ] && trace call exit pkg installmissing $DEPEND_PKG || true
  
#  mk_target_dependprj_ante "dependpkg"
}

#-------------------------------------------------------------------------------

mk_target_dependprjuninstall_ante()
{
  log_info "DEPEND_PRJ uninstall: $DEPEND_PRJ"
  for DEPEND in $DEPEND_PRJ
  do
    log_debug "DEPEND uninstall: $DEPEND"
    PACKAGE="$(echo "$DEPEND" | sed 's|/|-|g')"
    trace call exit uninstall "$PACKAGE"
  done
}

#-------------------------------------------------------------------------------

mk_target_dependprj_ante()
{
  DEPEND_TARGETS="$1"
  [ -z "$DEPEND_TARGETS" ] && DEPEND_TARGETS="depend build dependprj install"
  
  log_info "DEPEND_PRJ: $DEPEND_PRJ"
  for DEPEND in $DEPEND_PRJ
  do
    log_debug "DEPEND: $DEPEND"
#    trace call exit "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
#    INST_DIR="$INST_DIR" BUILD_DIR="$BUILD_DIR" DIST_DIR="$DIST_DIR" RUN_DIR="$RUN_DIR" TASK_DIR="$TASK_DIR" SHARED_RUN_DIR="" "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
    LOG_LEVEL_FORCE="$LOG_LEVEL" RUN_DIR="$RUN_DIR" SHARED_RUN_DIR="" "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
  done
}

#-------------------------------------------------------------------------------

mk_target_dependsrc_ante()
{
  DEPEND_TARGETS="$1"
  [ -z "$DEPEND_TARGETS" ] && DEPEND_TARGETS="depend build"
  
  log_info "DEPEND_SRC: $DEPEND_SRC"
  for DEPEND in $DEPEND_SRC
  do
    DEPEND="${DEPEND%%:*}"
    log_debug "DEPEND: $DEPEND"
#    trace call exit "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
#    INST_DIR="$INST_DIR" BUILD_DIR="$BUILD_DIR" DIST_DIR="$DIST_DIR" RUN_DIR="$RUN_DIR" TASK_DIR="$TASK_DIR" SHARED_RUN_DIR="" "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
    LOG_LEVEL_FORCE="$LOG_LEVEL" RUN_DIR="$RUN_DIR" SHARED_RUN_DIR="" "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
  done
}

#-------------------------------------------------------------------------------

mk_target_dependbuild_ante()
{
  DEPEND_TARGETS="$1"
  [ -z "$DEPEND_TARGETS" ] && DEPEND_TARGETS="depend build"
  
  log_info "DEPEND_BUILD: $DEPEND_BUILD"
  for DEPEND in $DEPEND_BUILD
  do
    DEPEND="${DEPEND%%:*}"
    log_debug "DEPEND: $DEPEND"
#    trace call exit "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
#    INST_DIR="$INST_DIR" BUILD_DIR="$BUILD_DIR" DIST_DIR="$DIST_DIR" RUN_DIR="$RUN_DIR" TASK_DIR="$TASK_DIR" SHARED_RUN_DIR="" "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
    LOG_LEVEL_FORCE="$LOG_LEVEL" RUN_DIR="$RUN_DIR" SHARED_RUN_DIR="" "$THIS_NAME" "$DEPEND" --profile "$PROFILE" -- $DEPEND_TARGETS
  done
}

#-------------------------------------------------------------------------------
