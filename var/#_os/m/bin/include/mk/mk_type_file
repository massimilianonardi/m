#!/bin/sh

#-------------------------------------------------------------------------------

mk_type_file_target_build()
(
  trace call exit mk_file_import "$DIST_DIR"
)

#-------------------------------------------------------------------------------

mk_type_file_target_run()
(
  log_warn "todo: mk_type_file_target_run || remove function"
#  trace call exit mk_file_import "$RUN_DIR"
)

#-------------------------------------------------------------------------------

#mk_type_file_target_install()
#(
#  trace call exit mk_file_import "$ROOT_DIR"
#)

#-------------------------------------------------------------------------------

mk_type_file_target_install()
(
# todo support hotseex functionality by moving from dist to dist/bin and keeping relative links updated
#  mv "$DIST_DIR" "$DIST_DIR.tmp"
#  mkdir -p "$DIST_DIR"
#  mv "$DIST_DIR.tmp" "$DIST_DIR/bin"
#  trace call exit imp "$DIST_DIR.tmp" "$DIST_DIR/bin"
  move -a "$DIST_DIR" "$DIST_DIR.tmp"
  mkdir -p "$DIST_DIR"
  move -act "$DIST_DIR.tmp" "$DIST_DIR/bin"
  
  DIST_SYS_DIR="$DIST_DIR/sys"
  
  mkdir -p "$DIST_SYS_DIR"
  echo "all">"$DIST_SYS_DIR/platform"
  if [ -z "$NAME" ]
  then
    echo "$PROJECT">"$DIST_SYS_DIR/name"
  else
    echo "$NAME">"$DIST_SYS_DIR/name"
  fi
  PACKAGE="$(echo "$PRJ_PATH" | sed 's|/|-|g')"
#  echo "$PACKAGE=bin/$PROJECT">"$DIST_SYS_DIR/command"
  echo "$PACKAGE=bin/init">"$DIST_SYS_DIR/command"
  if [ -z "$VERSION" ]
  then
    echo "latest">"$DIST_SYS_DIR/version"
  else
    echo "$VERSION">"$DIST_SYS_DIR/version"
  fi
)

#-------------------------------------------------------------------------------

mk_file_import()
(
  DEST_DIR="$1"
  
  if [ -z "$DEST_DIR" ]
  then
    exit 1
  fi
  
  trace call exit mk_file_import_source "$DEST_DIR"
  if [ -n "$DEPEND_SRC" ]; then trace call exit mk_file_import_external "$DEST_DIR" "$DEPEND_SRC" "imp"; fi
  if [ -n "$FILE_IMPORT" ]; then trace call exit mk_file_import_external "$DEST_DIR" "$FILE_IMPORT" "$FILE_IMPORT_OP"; fi
  if [ -n "$FILE_COPY" ]; then trace call exit mk_file_import_external "$DEST_DIR" "$FILE_COPY" "cpr"; fi
  if [ -n "$FILE_LINK" ]; then trace call exit mk_file_import_external "$DEST_DIR" "$FILE_LINK" "lnr"; fi
)

#-------------------------------------------------------------------------------

mk_file_import_source()
(
  DEST_DIR="$1"
  
  if [ -z "$DEST_DIR" ]
  then
    exit 1
  fi
  
  SKIP=".mk"
  cd "$SOURCE_DIR"
  for k in ..?* .[!.]* *
  do
    [ -e "$k" ] || continue
    [ "$k" = "$SKIP" ] && continue
    
    trace call exit impdeep "$SOURCE_DIR/$k" "$DEST_DIR/$k" 1
  done
)

#-------------------------------------------------------------------------------

mk_file_import_external()
(
  DEST_DIR="$1"
  
  if [ -z "$DEST_DIR" ]
  then
    exit 1
  fi
  
  FILES="$2"
  
  if [ -z "$FILES" ]
  then
    exit 0
  fi
  
  FILE_OP="$3"
  
  if [ -z "$FILE_OP" ]
  then
    FILE_OP="imp"
  fi
  
  [ "$FILE_OP" != "imp" ] && [ "$FILE_OP" != "cpr" ] && [ "$FILE_OP" != "lnr" ] && exit 1
  
  for k in $FILES
  do
    trace exec exit mk_file_import_external_files "$DEST_DIR" "$k" "$FILE_OP"
  done
)

#-------------------------------------------------------------------------------

mk_file_import_external_files()
(
  DEST_DIR="$1"
  
  if [ -z "$DEST_DIR" ]
  then
    exit 1
  fi
  
  FILES="$2"
  
  if [ -z "$FILES" ]
  then
    exit 0
  fi
  
  FILE_OP="$3"
  
  if [ -z "$FILE_OP" ]
  then
    FILE_OP="imp"
  fi
  
  [ "$FILE_OP" != "imp" ] && [ "$FILE_OP" != "cpr" ] && [ "$FILE_OP" != "lnr" ] && exit 1
  
  IMP_FROM=${FILES%:*}
  IMP_DEST=${FILES##$IMP_FROM}
  IMP_DEST=${IMP_DEST#:}
  
  if [ "$IMP_FROM" != "${IMP_FROM%%:*}" ]
  then
    PRJ_NAME=${IMP_FROM%%:*}
    IMP_FROM=${IMP_FROM##$PRJ_NAME}
    IMP_FROM=${IMP_FROM#:}
    log_debug "importing project - FILES: $FILES - PRJ_NAME: $PRJ_NAME - IMP_FROM: $IMP_FROM - IMP_DEST: $IMP_DEST"
    PRJ_PATH="$(exec_export_var "PRJ_PATH" mk_project_detect_from_dir "$PRJ_NAME")"
    SOURCE="$DATA_DIR/$DIST_SUBDIR/$PRJ_PATH"
    [ -n "$PROFILE" ] && SOURCE="$SOURCE-$PROFILE"
    [ -n "$IMP_FROM" ] && SOURCE="$SOURCE/$IMP_FROM"
  else
    log_debug "importing files - FILES: $FILES - IMP_FROM: $IMP_FROM - IMP_DEST: $IMP_DEST"
    SOURCE="$IMP_FROM"
  fi
  
  DESTINATION="$DEST_DIR"
  [ -n "$IMP_DEST" ] && DESTINATION="$DEST_DIR/$IMP_DEST"
  
  log_debug "SOURCE: $SOURCE - DESTINATION: $DESTINATION"
  trace call exit "$FILE_OP" "$SOURCE" "$DESTINATION"
)

#-------------------------------------------------------------------------------
