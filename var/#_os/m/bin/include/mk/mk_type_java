#!/bin/sh

#-------------------------------------------------------------------------------

cygpath_java_classpath()
(
  CLASSPATH=""
  for k in $1
  do
    CLASSPATH="$CLASSPATH;$(cygpath -w "$k")"
  done
  CLASSPATH="${CLASSPATH#\;}"
  echo "$CLASSPATH"
)

#-------------------------------------------------------------------------------

mk_type_java_target_build()
(
  _CLASS_DIR="$BUILD_DIR/classes"
  _METAINF_DIR="$_CLASS_DIR/META-INF"
  _MANIFEST_FILE="$_METAINF_DIR/MANIFEST.MF"
  [ "$SYS_OS_TYPE" = "windows" ] && _MANIFEST_FILE="$(cygpath -w "$_MANIFEST_FILE")"
  _SOURCE_FILES_LIST_FILE="$BUILD_DIR/source_files.txt"
  
  if [ -z "$NAME" ]
  then
    _JAR_FILENAME="$DIST_DIR/$PROJECT.jar"
  else
    _JAR_FILENAME="$DIST_DIR/$NAME.jar"
  fi
  
  [ -z "$JAVA_CLASSPATH_JARS" ] && JAVA_CLASSPATH_JARS="$JAVA_CLASSPATH_BUILD"
  
  if [ -n "$JAVA_CLASSPATH_BUILD" ]
  then
    if [ "$SYS_OS_TYPE" = "windows" ]
    then
#      JAVA_CLASSPATH_BUILD="$(echo "$JAVA_CLASSPATH_BUILD" | tr ' ' ';')"
      JAVA_CLASSPATH_BUILD="$(cygpath_java_classpath "$JAVA_CLASSPATH_BUILD")"
    else
      JAVA_CLASSPATH_BUILD="$(echo "$JAVA_CLASSPATH_BUILD" | tr ' ' ':')"
    fi
#    JAVA_FLAGS="-classpath \"$JAVA_CLASSPATH_BUILD\" $JAVA_FLAGS"
    JAVA_FLAGS="-classpath $JAVA_CLASSPATH_BUILD $JAVA_FLAGS"
  fi
  
  if [ -n "$JAVA_PREPROCESSOR_PATH" ]
  then
#    JAVA_FLAGS="-processorpath \"$JAVA_PREPROCESSOR_PATH\" $JAVA_FLAGS"
    JAVA_FLAGS="-processorpath $JAVA_PREPROCESSOR_PATH $JAVA_FLAGS"
  fi
  
  _JAR_FLAGS="cf"
  _JAR_PARAMS=""
  
  if [ -n "$JAVA_MAIN_CLASS" ]
  then
    _JAR_FLAGS="$_JAR_FLAGS"e
    _JAR_PARAMS="$JAVA_MAIN_CLASS"
  fi
  
  if [ -n "$JAVA_CLASSPATH_RUN" ]
  then
    _JAR_FLAGS="$_JAR_FLAGS"m
#    _JAR_PARAMS="$_JAR_PARAMS \"$_MANIFEST_FILE\""
    _JAR_PARAMS="$_JAR_PARAMS $_MANIFEST_FILE"
  fi
  
  if [ "$TARGET" = "build" ]
  then
    mkdir -p "$BUILD_DIR"
    mkdir -p "$_CLASS_DIR"
    mkdir -p "$DIST_DIR"
    if [ "$SYS_OS_TYPE" = "windows" ]
    then
      _CLASS_DIR="$(cygpath -w "$_CLASS_DIR")"
      _SOURCE_FILES_LIST_FILE="$(cygpath -w "$_SOURCE_FILES_LIST_FILE")"
      _JAR_FILENAME="$(cygpath -w "$_JAR_FILENAME")"
    fi
    (
    cd "$SOURCE_DIR"
    find . -type f -name "*.java" > "$_SOURCE_FILES_LIST_FILE"
    javac $JAVA_FLAGS -sourcepath "." -d "$_CLASS_DIR" @"$_SOURCE_FILES_LIST_FILE"
    )
    echo "#!/bin/sh"> "$DIST_DIR/$PROJECT"
    if [ -n "$JAVA_CLASSPATH_RUN" ]
    then
      mkdir -p "$_METAINF_DIR"
      [ "$SYS_OS_TYPE" = "windows" ] && _MANIFEST_FILE="$(cygpath -u "$_MANIFEST_FILE")"
      mkdir -p "$DIST_DIR/lib"
      _CP=""
      for k in $JAVA_CLASSPATH_RUN
      do
        cp -L -fr "$k" "$DIST_DIR/lib/$(basename "$k")"
#        lnk -cfr "$k" "$DIST_DIR/lib/$(basename "$k")"
#        eval lnk -cfr "$k" "$DIST_DIR/lib/$(basename "$k")"
        if [ "$k" = "${k#$LIB_DIR/}" ]
        then
          echo 'CLASSPATH="'"$k"':$CLASSPATH"'>> "$DIST_DIR/$PROJECT"
        else
          echo 'CLASSPATH="$LIB_DIR/'"${k#$LIB_DIR/}"':$CLASSPATH"'>> "$DIST_DIR/$PROJECT"
        fi
        _CP="$_CP ./lib/$(basename "$k")"
#        _CP="$_CP $(basename "$k")"
      done
      echo "Class-Path:" $_CP .>"$_MANIFEST_FILE"
    fi
#    ifneq ($(JAVA_DIST_FILES_JAR),)
#      cp $(JAVA_DIST_FILES_JAR) "$(_CLASS_DIR)"
#    endif
    mkdir -p "$(dirname "$_JAR_FILENAME")"
    jar $_JAR_FLAGS "$_JAR_FILENAME" $_JAR_PARAMS -C "$_CLASS_DIR" .
#    echo 'java -jar "$(dirname "$(readlink -e "$0")")/'$(basename "$_JAR_FILENAME")'"'>> "$DIST_DIR/$PROJECT"
    echo 'THIS_DIR="$(dirname "$(path -al "$0")")"'>> "$DIST_DIR/$PROJECT"
    echo 'java -cp "$CLASSPATH:$THIS_DIR/lib/*:$THIS_DIR/'$(basename "$_JAR_FILENAME")\" \""$JAVA_MAIN_CLASS"\" '"$@"'>> "$DIST_DIR/$PROJECT"
    echo "java -jar \"%~dp0$(basename "$_JAR_FILENAME")\""> "$DIST_DIR/$PROJECT".cmd
    chmod +x "$DIST_DIR/$PROJECT"
#    ifneq ($(JAVA_DIST_FILES),)
#      cp $(JAVA_DIST_FILES) "$(DIST_DIR)"
#    endif
#    [ -n "$JAVA_CLASSPATH_JARS" ] && mkdir -p "$DIST_DIR/lib" && cp -fr $JAVA_CLASSPATH_JARS "$DIST_DIR/lib"
# todo .cmd and .sh files to execute with correct classpath
  fi
  
  if [ -z "$JAVA_MAIN_CLASS" ]
  then
    rm "$DIST_SYS_DIR/command"
    rm "$DIST_DIR/$PROJECT"
    rm "$DIST_DIR/$PROJECT".cmd
  fi
#echo $DIST_DIR _________________________________________________________________
)

#-------------------------------------------------------------------------------

#mk_type_java_target_run()
#{
#  trace call exit "$DIST_DIR/$PROJECT"
#}

#-------------------------------------------------------------------------------

mk_type_java_target_install()
{
  mv "$DIST_DIR" "$DIST_DIR.tmp"
  mkdir -p "$DIST_DIR"
  mv "$DIST_DIR.tmp" "$DIST_DIR/bin"
  
  DIST_SYS_DIR="$DIST_DIR/sys"
#  DIST_DIR="$DIST_DIR/bin"
  
# todo copy libs option, cmd file only when main class (because jar exec and not jar lib) cmd for windows??? -> yes because even with cygwin java for windows has different cmd line
  mkdir -p "$DIST_SYS_DIR"
  echo "java">"$DIST_SYS_DIR/depend"
  echo "all">"$DIST_SYS_DIR/platform"
  if [ -z "$NAME" ]
  then
    echo "$PROJECT">"$DIST_SYS_DIR/name"
  else
    echo "$NAME">"$DIST_SYS_DIR/name"
  fi
  PACKAGE="$(echo "$PRJ_PATH" | sed 's|/|-|g')"
#  echo "$PKG_GROUP-$PKG_ARTIFACT">"$DIST_SYS_DIR/path"
#  echo "$PKG_GROUP-$PKG_ARTIFACT">"$DIST_SYS_DIR/env"
  echo "$PACKAGE=bin/$PROJECT">"$DIST_SYS_DIR/command"
  echo "java/$PACKAGE.jar=bin/$PROJECT.jar">"$DIST_SYS_DIR/lib"
#  echo "$PKG_ARTIFACT.jar=bin/$PKG_ARTIFACT-$PKG_VERSION.jar">>"$DIST_SYS_DIR/lib"
  if [ -z "$VERSION" ]
  then
    echo "latest">"$DIST_SYS_DIR/version"
  else
    echo "$VERSION">"$DIST_SYS_DIR/version"
  fi
  
#  if [ -z "$JAVA_MAIN_CLASS" ]
#  then
#    rm "$DIST_SYS_DIR/command"
#    rm "$DIST_DIR/$PROJECT"
#    rm "$DIST_DIR/$PROJECT".cmd
#  fi
}

#-------------------------------------------------------------------------------
