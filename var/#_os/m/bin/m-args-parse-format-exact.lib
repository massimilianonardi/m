#!/bin/sh

. m-string.lib
. m-array.lib

[ -z "$ARGS_FIXED_VARIABLE_PREFIX" ] && ARGS_FIXED_VARIABLE_PREFIX="ARG_FIXED"

[ -z "$ARGS_SWITCH_VARIABLE_PREFIX" ] && ARGS_SWITCH_VARIABLE_PREFIX="SWITCH"
[ -z "$ARGS_SWITCH_ON" ] && ARGS_SWITCH_ON="true"

[ -z "$ARGS_OPTION_VARIABLE_PREFIX" ] && ARGS_OPTION_VARIABLE_PREFIX="OPTION"
[ -z "$ARGS_OPTION_ON" ] && ARGS_OPTION_ON="true"
[ -z "$ARGS_OPTION_DEFAULT_ALLOWED_PARAMS" ] && ARGS_OPTION_DEFAULT_ALLOWED_PARAMS="*"

#-------------------------------------------------------------------------------

log_debug "[args parse][args fixed] checking for args fixed: ARGS_FIXED=$ARGS_FIXED"
if is_integer "$ARGS_FIXED"
then
  log_trace "[args parse][args fixed] parsing args fixed"

  ARGS_PARSE_i="0"
  while [ "$ARGS_PARSE_i" -lt "$ARGS_FIXED" ]
  do
    log_debug "[args parse][args fixed] detected arg fixed: ${ARGS_FIXED_VARIABLE_PREFIX}_${ARGS_PARSE_i}=$1"
    array_add "$ARGS_FIXED_VARIABLE_PREFIX" "$1"
    shift
    ARGS_PARSE_i="$((ARGS_PARSE_i + 1))"
  done

  unset ARGS_PARSE_i
fi

log_debug "[args parse][switches] checking for allowed switches: ARGS_SWITCHES=$ARGS_SWITCHES"
if [ "$1" != "${1#-[[:alpha:]]}" ]
then
  ARGS_PARSE_CMD_LINE_SWITCHES="${1#-}"
  shift

  log_debug "[args parse][switches] deteced switches: $ARGS_PARSE_CMD_LINE_SWITCHES"

  if [ -z "$ARGS_SWITCHES" ]
  then
    log_fatal "[args parse][switches] switches not allowed - provided: $ARGS_PARSE_CMD_LINE_SWITCHES"
    exit 1
  fi

  ARGS_PARSE_r="${ARGS_PARSE_CMD_LINE_SWITCHES#?}"
  ARGS_PARSE_k="${ARGS_PARSE_CMD_LINE_SWITCHES%${ARGS_PARSE_r}}"
  unset ARGS_PARSE_CMD_LINE_SWITCHES

  while [ -n "$ARGS_PARSE_k" ]
  do
    log_trace "[args parse][switches] current switch = $ARGS_PARSE_k - remaining $ARGS_PARSE_r"
    if is_char_in_word "$ARGS_PARSE_k" "$ARGS_SWITCHES"
    then
      log_trace "[args parse][switches] detected allowed switch '$ARGS_PARSE_k': ${ARGS_SWITCH_VARIABLE_PREFIX}_${ARGS_PARSE_k}=$ARGS_SWITCH_ON"
      eval "${ARGS_SWITCH_VARIABLE_PREFIX}_${ARGS_PARSE_k}=\"$ARGS_SWITCH_ON\""
    else
      log_fatal "[args parse][switches] switch '$ARGS_PARSE_k' forbidden - allowed: $ARGS_SWITCHES"
      exit 1
    fi
    ARGS_PARSE_k="${ARGS_PARSE_r%${ARGS_PARSE_r#?}}"
    ARGS_PARSE_r="${ARGS_PARSE_r#?}"
  done

  unset ARGS_PARSE_r
  unset ARGS_PARSE_k
fi

log_debug "[args parse][options] checking for allowed options: ARGS_OPTIONS=$ARGS_OPTIONS"
while [ "$1" != "${1#--[[:alpha:]]}" ] && [ "$1" != "--" ]
do
  ARGS_PARSE_CMD_LINE_OPTION="${1#--}"
  shift

  log_trace "[args parse][options] deteced option: $ARGS_PARSE_CMD_LINE_OPTION"

  if [ -z "$ARGS_OPTIONS" ]
  then
    log_fatal "[args parse][options] options not allowed - provided: $ARGS_PARSE_CMD_LINE_OPTION"
    exit 1
  fi

  if is_word_in_list "$ARGS_PARSE_CMD_LINE_OPTION" "$ARGS_OPTIONS"
  then
    log_debug "[args parse][options] detected allowed option '$ARGS_PARSE_CMD_LINE_OPTION'"

    ARGS_PARSE_o="$ARGS_PARSE_CMD_LINE_OPTION"
    while [ "$ARGS_PARSE_o" != "${ARGS_PARSE_o#*-}" ]
    do
      ARGS_PARSE_o="${ARGS_PARSE_o%%-*}_${ARGS_PARSE_o#*-}"
    done
    ARGS_PARSE_CMD_LINE_OPTION_SAFE_NAME="$ARGS_PARSE_o"
    unset ARGS_PARSE_o
    log_trace "[args parse][options] determined option safe name: $ARGS_PARSE_CMD_LINE_OPTION_SAFE_NAME"

    eval "${ARGS_OPTION_VARIABLE_PREFIX}_${ARGS_PARSE_CMD_LINE_OPTION_SAFE_NAME}=\"\$ARGS_OPTION_ON\""
    eval "ARGS_PARSE_p=\"\$ARGS_OPTION_${ARGS_PARSE_CMD_LINE_OPTION_SAFE_NAME}\""
    [ -z "$ARGS_PARSE_p" ] && ARGS_PARSE_p="$ARGS_OPTION_DEFAULT_ALLOWED_PARAMS"
    log_trace "[args parse][options] determined option number of allowed params: '$ARGS_PARSE_p'"

    if [ -n "$ARGS_PARSE_p" ]
    then
#      eval "unset ${ARGS_OPTION_VARIABLE_PREFIX}_${ARGS_PARSE_CMD_LINE_OPTION_SAFE_NAME}"
      if is_integer "$ARGS_PARSE_p"
      then
        log_trace "[args parse][options] determined option number of allowed params is an integer: '$ARGS_PARSE_p'"
        while [ "0" -lt "$ARGS_PARSE_p" ]
        do
          ARGS_PARSE_p="$((ARGS_PARSE_p - 1))"
          log_trace "[args parse][options] determined param for option $ARGS_PARSE_CMD_LINE_OPTION: '$1'"
          array_add "${ARGS_OPTION_VARIABLE_PREFIX}_${ARGS_PARSE_CMD_LINE_OPTION_SAFE_NAME}" "$1"
          shift
        done
      elif [ "$ARGS_PARSE_p" = "*" ]
      then
        log_trace "[args parse][options] determined option number of allowed params is automatic: '$ARGS_PARSE_p'"
        while [ "$1" = "${1#--[[:alpha:]]}" ] && [ "$1" != "--" ]
        do
          log_trace "[args parse][options] determined param for option $ARGS_PARSE_CMD_LINE_OPTION: '$1'"
          array_add "${ARGS_OPTION_VARIABLE_PREFIX}_${ARGS_PARSE_CMD_LINE_OPTION_SAFE_NAME}" "$1"
          shift
        done
      else
        log_fatal "[args parse][options] invalid option number of allowed params: '$ARGS_PARSE_p'"
        exit 1
      fi
    fi
    unset ARGS_PARSE_p
  else
    log_fatal "[args parse][options] option '$ARGS_PARSE_CMD_LINE_OPTION' forbidden - allowed: $ARGS_OPTIONS"
    exit 1
  fi
  log_trace "[args parse][options] parsed option '$ARGS_PARSE_CMD_LINE_OPTION' - remaining args: $@"
  unset ARGS_PARSE_CMD_LINE_OPTION
  unset ARGS_PARSE_CMD_LINE_OPTION_SAFE_NAME
done



log_debug "[args parse][terminator] checking for terminator"
if [ "$1" = "--" ]
then
  shift
  log_debug "[args parse][terminator] detected terminator -- remaining args: $@"
fi

#-------------------------------------------------------------------------------
