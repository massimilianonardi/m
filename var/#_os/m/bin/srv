#!/bin/sh

#-------------------------------------------------------------------------------

#install()
#(
##echo euid "$(id -u)"
##  if [ "$(id -u)" != "0" ]
##  then
##echo need sudo priviliges
###    exit 1
##    exec sudo -E "$0" "$@"
##  fi
#
#  if [ "$#" -lt "4" ]
#  then
#    exit 1
#  fi
#
#  SRV_NAME="$1"
#  SRV_START="$M_SH $2"
#  SRV_STOP="$M_SH $3"
#  SRV_DIR="$4"
#  SRV_LOG="$5"
#
#  SYSD_FILE="/etc/systemd/system/${SRV_NAME}.service"
#  LOGR_FILE="/etc/logrotate.d/${SRV_NAME}"
#
#  sudo -s <<SUDO
##  sudo -- sh -c <<SUDO
#  sudo tee "$SYSD_FILE" <<EOF
#[Unit]
#Description="$SRV_NAME"
#After=syslog.target network.target
#
#[Service]
#Type=forking
#
#WorkingDirectory=$SRV_DIR
#
#PrivateTmp=true
#
##EnvironmentFile=/m/pkg/server/bin/system/env.conf
#
##SyslogIdentifier=mnode-%i
#
#Restart=on-abort
#
#ExecStart=/bin/sh -c "$SRV_START"
#ExecStop=/bin/sh -c "$SRV_STOP"
##ExecReload=/bin/sh -c "$SRV_STOP; $SRV_START"
#
#[Install]
#WantedBy=multi-user.target
#EOF
#
#  systemctl daemon-reload
#  systemctl enable "$SRV_NAME"
#  systemctl daemon-reload
#
#  if [ -n "$SRV_LOG" ]
#  then
#  sudo tee "$LOGR_FILE" <<EOF
#"$SRV_LOG" {
#	daily
#	missingok
#	copytruncate
#	rotate 120
#	compress
#	delaycompress
#	notifempty
#}
#EOF
#  fi
#SUDO
#)

#-------------------------------------------------------------------------------

#uninstall()
#(
#  if [ -z "$1" ]
#  then
#    exit 1
#  fi
#
#  SRV_NAME="$1"
#
#  SYSD_FILE="/etc/systemd/system/${SRV_NAME}.service"
#  LOGR_FILE="/etc/logrotate.d/${SRV_NAME}"
#
#  sudo -s <<SUDO
#  service "$1" stop
#  service "$1" status
#  systemctl disable "$SRV_NAME"
#  systemctl daemon-reload
#
#  sudo rm -f "$SYSD_FILE" "$SYSD_FILE"
#SUDO
#)

#-------------------------------------------------------------------------------

#uninstallonly()
#(
#  if [ -z "$1" ]
#  then
#    exit 1
#  fi
#
#  SRV_NAME="$1"
#
#  SYSD_FILE="/etc/systemd/system/${SRV_NAME}.service"
#  LOGR_FILE="/etc/logrotate.d/${SRV_NAME}"
#
#  sudo -s <<SUDO
#  systemctl disable "$SRV_NAME"
#  systemctl daemon-reload
#
#  sudo rm -f "$SYSD_FILE" "$SYSD_FILE"
#SUDO
#)

#-------------------------------------------------------------------------------

run()
(
  "$@"
)

#-------------------------------------------------------------------------------

startnolog()
(
  "$@" &
  echo $!>"$PID_DIR/$SRV_NAME.pid"
)

#-------------------------------------------------------------------------------

start()
(
  "$@" >> "$LOG_DIR/$SRV_NAME.log" 2>&1 &
  echo $!>"$PID_DIR/$SRV_NAME.pid"
)

#-------------------------------------------------------------------------------

status()
(
  if [ -f "$PID_DIR/$SRV_NAME.pid" ]
  then
    echo "running - pid: $(cat "$PID_DIR/$SRV_NAME.pid")"
  else
    echo "stopped"
  fi
)

#-------------------------------------------------------------------------------

stop()
(
  if PID="$(cat "$PID_DIR/$SRV_NAME.pid")"
  then
    pkill -P "$PID"
#    kill "$PID"
    rm -f "$PID_DIR/$SRV_NAME.pid"
    log_warn "stopped - PID: $PID - PID_FILE: $PID_DIR/$SRV_NAME.pid"
  else
    log_fatal "stop - pid file not found - PID_FILE: $PID_DIR/$SRV_NAME.pid"
  fi
)

#-------------------------------------------------------------------------------

restart()
(
  stop "$@"
  start "$@"
)

#-------------------------------------------------------------------------------

group()
(
# todo: srv group "srv_name=srv_work" start "file-with-one-srvblockingcommand-per-line"
# not useful because to make a group i can create one script with many srv commands and only param is start/stop/etc
  if [ -z "$SRV_NAME" ]
  then
    SRV_NAME="$2"
  fi

  if [ -z "$SRV_WORK" ]
  then
    SRV_WORK="$2"
  fi

  if [ "$SRV_WORK" != "false" ]
  then
    work "$SRV_WORK"
  fi

  i="0"
  IFS_ORIG="$IFS"
  IFS=$'\n'
  for h in $(cat "$CONF_LIST_FILE")
  do
    IFS="$IFS_ORIG"
    export SRV_NAME="${CONF_LIST_FILE##*/}-$i"
    log_info SRV_NAME="$SRV_NAME" - srv \"$1\" \"$2\" $h
    eval srv \"$1\" \"$2\" $h
    i="$((i + 1))"
  done
  IFS="$IFS_ORIG"
)

#-------------------------------------------------------------------------------

main()
{
  case "$1" in
#    "install") true;;
#    "uninstall") true;;
#    "uninstallonly") true;;
    "run") true;;
    "startnolog") true;;
    "start") true;;
    "status") true;;
    "stop") true;;
    "restart") true;;
#    "group") return "$@";;
    *) exit 1;;
  esac

  if [ -z "$2" ] && [ -z "$SRV_NAME" ]
  then
    log_fatal "wrong number of arguments"
    exit 1
  fi

  if [ -z "$SRV_NAME" ]
  then
    SRV_NAME="$2"
  fi

  if [ -z "$SRV_WORK" ]
  then
    SRV_WORK="$2"
  fi

  if [ "$SRV_WORK" != "false" ]
  then
    work "$SRV_WORK"
  fi

  "$@"
}

#-------------------------------------------------------------------------------

ARGS_PARSE="true"

. m.lib.sh

#-------------------------------------------------------------------------------
