#!/bin/sh

#-------------------------------------------------------------------------------

install()
(
#echo euid "$(id -u)"
#  if [ "$(id -u)" != "0" ]
#  then
#echo need sudo priviliges
##    exit 1
#    exec sudo -E "$0" "$@"
#  fi

  if [ "$#" -lt "4" ]
  then
    exit 1
  fi

  SRV_NAME="$1"
  SRV_START="$M_SH $2"
  SRV_STOP="$M_SH $3"
  SRV_DIR="$4"
  SRV_LOG="$5"

  SYSD_FILE="/etc/systemd/system/${SRV_NAME}.service"
  LOGR_FILE="/etc/logrotate.d/${SRV_NAME}"

  sudo -s <<SUDO
#  sudo -- sh -c <<SUDO
  sudo tee "$SYSD_FILE" <<EOF
[Unit]
Description="$SRV_NAME"
After=syslog.target network.target

[Service]
Type=forking

WorkingDirectory=$SRV_DIR

PrivateTmp=true

#EnvironmentFile=/m/pkg/server/bin/system/env.conf

#SyslogIdentifier=mnode-%i

Restart=on-abort

ExecStart=/bin/sh -c "$SRV_START"
ExecStop=/bin/sh -c "$SRV_STOP"
#ExecReload=/bin/sh -c "$SRV_STOP; $SRV_START"

[Install]
WantedBy=multi-user.target
EOF

  systemctl daemon-reload
  systemctl enable "$SRV_NAME"
  systemctl daemon-reload

  if [ -n "$SRV_LOG" ]
  then
  sudo tee "$LOGR_FILE" <<EOF
"$SRV_LOG" {
	daily
	missingok
	copytruncate
	rotate 120
	compress
	delaycompress
	notifempty
}
EOF
  fi
SUDO
)

#-------------------------------------------------------------------------------

uninstall()
(
  if [ -z "$1" ]
  then
    exit 1
  fi

  SRV_NAME="$1"

  SYSD_FILE="/etc/systemd/system/${SRV_NAME}.service"
  LOGR_FILE="/etc/logrotate.d/${SRV_NAME}"

  sudo -s <<SUDO
  service "$1" stop
  service "$1" status
  systemctl disable "$SRV_NAME"
  systemctl daemon-reload

  sudo rm -f "$SYSD_FILE" "$SYSD_FILE"
SUDO
)

#-------------------------------------------------------------------------------

uninstallonly()
(
  if [ -z "$1" ]
  then
    exit 1
  fi

  SRV_NAME="$1"

  SYSD_FILE="/etc/systemd/system/${SRV_NAME}.service"
  LOGR_FILE="/etc/logrotate.d/${SRV_NAME}"

  sudo -s <<SUDO
  systemctl disable "$SRV_NAME"
  systemctl daemon-reload

  sudo rm -f "$SYSD_FILE" "$SYSD_FILE"
SUDO
)

#-------------------------------------------------------------------------------

start()
(
  if [ -z "$1" ]
  then
    exit 1
  fi

  if service "$1" status > /dev/null 2>&1
  then
    sudo service "$1" start
  else
  fi
)

#-------------------------------------------------------------------------------

status()
(
  if [ -z "$1" ]
  then
    exit 1
  fi

  if service "$1" status > /dev/null 2>&1
  then
    sudo service "$1" status
  else
    log_error "service $1 not found"
  fi
)

#-------------------------------------------------------------------------------

stop()
(
  if [ -z "$1" ]
  then
    exit 1
  fi

  if service "$1" status > /dev/null 2>&1
  then
    sudo service "$1" stop
  else
    log_error "service $1 not found"
  fi
)

#-------------------------------------------------------------------------------

restart()
(
  if [ -z "$1" ]
  then
    exit 1
  fi

  if service "$1" status > /dev/null 2>&1
  then
    sudo service "$1" restart
  else
    log_error "service $1 not found"
  fi
)

#-------------------------------------------------------------------------------

main()
{
  case "$1" in
    "install") true;;
    "uninstall") true;;
    "uninstallonly") true;;
    "start") true;;
    "status") true;;
    "stop") true;;
    "restart") true;;
    *) exit 1;;
  esac

  "$@"
}

#-------------------------------------------------------------------------------

ARGS_PARSE="true"
ARGS_FORMAT="smart"

. m.lib.sh

#-------------------------------------------------------------------------------
