#!/bin/sh

#-------------------------------------------------------------------------------

sys_platform()
{
  SYS_OS="$(uname -s)"
  case $SYS_OS in
    *Linux* | *linux*)
      SYS_OS="linux"
      SYS_OS_TYPE="linux"
    ;;
    *Darwin* | *darwin*)
      SYS_OS="macos"
      SYS_OS_TYPE="macos"
    ;;
    *BSD* | *bsd* | *DragonFly*)
      SYS_OS="bsd"
      SYS_OS_TYPE="bsd"
    ;;
    *GNU* | *gnu*)
      SYS_OS="gnu"
      SYS_OS_TYPE="gnu"
    ;;
    *QNX* | *qnx*)
      SYS_OS="qnx"
      SYS_OS_TYPE="posix"
    ;;
    *Minix* | *minix*)
      SYS_OS="minix"
      SYS_OS_TYPE="posix"
    ;;
    *SunOS*)
      SYS_OS="sunos"
      SYS_OS_TYPE="sunos"
    ;;
    *HP-UX*)
      SYS_OS="hpux"
      SYS_OS_TYPE="posix"
    ;;
    *AIX*)
      SYS_OS="aix"
      SYS_OS_TYPE="posix"
    ;;
    *IRIX*)
      SYS_OS="irix"
      SYS_OS_TYPE="posix"
    ;;
    *OS400*)
      SYS_OS="os400"
      SYS_OS_TYPE="posix"
    ;;
    *WindowsNT*)
      SYS_OS="winnt"
      SYS_OS_TYPE="windows"
    ;;
    *CYGWIN*)
      SYS_OS="cygwin"
      SYS_OS_TYPE="windows"
    ;;
    *MSYS*)
      SYS_OS="msys"
      SYS_OS_TYPE="windows"
    ;;
    *MINGW*)
      SYS_OS="mingw"
      SYS_OS_TYPE="windows"
    ;;
    *MS-DOS*)
      SYS_OS="msdos"
      SYS_OS_TYPE="windows"
    ;;
    *)
      SYS_OS=""
      SYS_OS_TYPE=""
    ;;
  esac

  SYS_OS_VER=""
  SYS_OS_ARCH="$(getconf LONG_BIT)"
  SYS_CPU="$(uname -m)"

  PLATFORM=""
  [ "$SYS_OS_TYPE" != "" ] && PLATFORM="$SYS_OS_TYPE"
  [ "$SYS_CPU" != "" ] && PLATFORM="$PLATFORM"-"$SYS_CPU"

  export SYS_OS_TYPE
  export SYS_OS
  export SYS_OS_VER
  export SYS_OS_ARCH
  export SYS_CPU
  export PLATFORM

  if [ "$SYS_OS_TYPE" = "windows" ]
  then
    export SYS_USER="Administrator"
  else
    export SYS_USER="root"
  fi
  export SYS_ANONYMOUS_USER="anonymous"
  export SYS_PORTABLE_USER="PortableUser"
}

#-------------------------------------------------------------------------------

sys_root_env()
{
  [ -z "$1" ] && exit 1

  export ROOT_DIR="$1"
  export M_SH="$ROOT_DIR/m"

  [ -z "$SRC_DIR" ] && export SRC_DIR="$ROOT_DIR/src"

  export PKG_DIR="$ROOT_DIR/pkg"
  export SYS_DIR="$ROOT_DIR/sys"
  export USR_DIR="$ROOT_DIR/usr"
  export WRK_DIR="$ROOT_DIR/wrk"

  export WORK_DIR="$WRK_DIR"

  export CMD_DIR="$SYS_DIR/cmd"
  export ENV_DIR="$SYS_DIR/env"
  export APP_DIR="$SYS_DIR/app"
  export LIB_DIR="$SYS_DIR/lib"

  export DEP_DIR="$SYS_DIR/dep"
  export DEPREV_DIR="$SYS_DIR/deprev"

  # export ENV_FILE="$ENV_DIR/env"
  # export PATH_FILE="$ENV_DIR/path"
  export ENV_FILE="$ENV_DIR/.env"
  export PATH_FILE="$ENV_DIR/.path"

  PATH="$CMD_DIR:$PATH"
  PATH="$CMD_DIR/$PLATFORM:$PATH"
  export PATH="$ROOT_DIR:$PATH"

#  user_env "$USER"

  [ -f "$ENV_FILE" ] && . "$ENV_FILE"
  [ -f "$PATH_FILE" ] && . "$PATH_FILE"

  # [ -f "$ENV_DIR/.env" ] && . "$ENV_DIR/.env"
  # [ -f "$ENV_DIR/.path" ] && . "$ENV_DIR/.path"

  true
}

#-------------------------------------------------------------------------------

sys_root_dir()
{
#  [ ! -d "$SRC_DIR" ] && mkdir -p "$SRC_DIR"
  [ ! -d "$PKG_DIR" ] && mkdir -p "$PKG_DIR"
  [ ! -d "$SYS_DIR" ] && mkdir -p "$SYS_DIR"
  [ ! -d "$USR_DIR" ] && mkdir -p "$USR_DIR"
  [ ! -d "$WRK_DIR" ] && mkdir -p "$WRK_DIR"
  [ ! -d "$WORK_DIR" ] && mkdir -p "$WORK_DIR"

  [ ! -d "$CMD_DIR" ] && mkdir -p "$CMD_DIR"
  [ ! -d "$ENV_DIR" ] && mkdir -p "$ENV_DIR"
  [ ! -d "$APP_DIR" ] && mkdir -p "$APP_DIR"
  [ ! -d "$LIB_DIR" ] && mkdir -p "$LIB_DIR"

  [ ! -d "$DEP_DIR" ] && mkdir -p "$DEP_DIR"
  [ ! -d "$DEPREV_DIR" ] && mkdir -p "$DEPREV_DIR"

  true
}

#-------------------------------------------------------------------------------

sys_root()
{
  sys_platform
  sys_root_env "$@"
  sys_root_dir "$@"

  log_debug "root changed - init: $INIT_DIR - root: $ROOT_DIR - src: $SRC_DIR"
}

#-------------------------------------------------------------------------------

user_env()
{
  USER="$1"

  [ -z "$USER" ] && USER="$(id -un)"
  [ -z "$USER" ] && USER="$SYS_ANONYMOUS_USER"
  [ -z "$USER" ] && USER="nouser"

  export USER

  export USER_DIR="$USR_DIR/$USER"
  [ -n "$2" ] && USER_DIR="$2/$USER"

  export USER_CONF_DIR="$USER_DIR/conf"
  export USER_DATA_DIR="$USER_DIR/data"
  export USER_HOME_DIR="$USER_DIR/home-$PLATFORM"
  export USER_LOG_DIR="$USER_DIR/log"
  export USER_PID_DIR="$USER_DIR/pid"
  export USER_TMP_DIR="$USER_DIR/tmp"



#  export HOME_DIR="$USER_DIR/home"

  export USERNAME="$USER"
  export USERHOME="$USER_HOME_DIR"
  export HOME="$USERHOME"

  if [ "$SYS_OS_TYPE" = "windows" ]
  then
    export USERPROFILE="$(cygpath -w "$USERHOME")"
    export HOMEPATH="$(cygpath -w "${USERPROFILE:2}")"

#    export ProgramData="$(cygpath -w "$USERHOME/windows/program_data")"
#    export ALLUSERSPROFILE="$(cygpath -w "$USERHOME/windows/appdata")"
#    export APPDATA="$(cygpath -w "$USERHOME/windows/appdata/roaming")"
#    export LOCALAPPDATA="$(cygpath -w "$USERHOME/windows/appdata/local")"
    export ProgramData="$(cygpath -w "$USERHOME/windows_data_program")"
    export ALLUSERSPROFILE="$(cygpath -w "$USERHOME/windows_allusers")"
    export APPDATA="$(cygpath -w "$USERHOME/windows_data_app")"
    export LOCALAPPDATA="$(cygpath -w "$USERHOME/windows_data_app_local")"

    export TEMP="$USERTMP"
    export TMP="$USERTMP"
  fi
}

#-------------------------------------------------------------------------------

user()
{
  user_env "$@"

  [ ! -d "$USER_CONF_DIR" ] && mkdir -p "$USER_CONF_DIR"
  [ ! -d "$USER_DATA_DIR" ] && mkdir -p "$USER_DATA_DIR"
  [ ! -d "$USER_HOME_DIR" ] && mkdir -p "$USER_HOME_DIR"
  [ ! -d "$USER_LOG_DIR" ] && mkdir -p "$USER_LOG_DIR"
  [ ! -d "$USER_PID_DIR" ] && mkdir -p "$USER_PID_DIR"
  [ ! -d "$USER_TMP_DIR" ] && mkdir -p "$USER_TMP_DIR"

  log_debug "user changed - user: $USER"

  true
}

#-------------------------------------------------------------------------------

work_env()
{
  if [ -n "$1" ]
  then
   if [ -n "$2" ]
   then
     export CONF_DIR="$2/conf/$1"
     export DATA_DIR="$2/data/$1"
     export HOME_DIR="$2/home/$1"
     export LOG_DIR="$2/log/$1"
     export PID_DIR="$2/pid/$1"
     export TMP_DIR="$2/tmp/$1"
   else
     export CONF_DIR="$WORK_DIR/conf/$1"
     export DATA_DIR="$WORK_DIR/data/$1"
     export HOME_DIR="$WORK_DIR/home/$1"
     export LOG_DIR="$WORK_DIR/log/$1"
     export PID_DIR="$WORK_DIR/pid/$1"
     export TMP_DIR="$WORK_DIR/tmp/$1"
   fi
  else
    export CONF_DIR="$WORK_DIR/conf"
    export DATA_DIR="$WORK_DIR/data"
    export HOME_DIR="$WORK_DIR/home"
    export LOG_DIR="$WORK_DIR/log"
    export PID_DIR="$WORK_DIR/pid"
    export TMP_DIR="$WORK_DIR/tmp"
  fi
}

#-------------------------------------------------------------------------------

work()
{
  work_env "$@"

  [ ! -d "$CONF_DIR" ] && mkdir -p "$CONF_DIR"
  [ ! -d "$DATA_DIR" ] && mkdir -p "$DATA_DIR"
  [ ! -d "$HOME_DIR" ] && mkdir -p "$HOME_DIR"
  [ ! -d "$LOG_DIR" ] && mkdir -p "$LOG_DIR"
  [ ! -d "$PID_DIR" ] && mkdir -p "$PID_DIR"
  [ ! -d "$TMP_DIR" ] && mkdir -p "$TMP_DIR"

#  log_debug "work changed - work: $@ - WORK_DIR: $WORK_DIR"

  true
}

#-------------------------------------------------------------------------------

home()
{
#  work_env "$@"

#  cd "$HOME_DIR"

  lnk -cfa "$ROOT_DIR" "$HOME_DIR/root"
#  lnk -cfr "$ROOT_DIR" "$HOME_DIR/root"

  lnk -cfr "$CONF_DIR" "$HOME_DIR/conf"
  lnk -cfr "$DATA_DIR" "$HOME_DIR/data"
  lnk -cfr "$LOG_DIR" "$HOME_DIR/log"
  lnk -cfr "$PID_DIR" "$HOME_DIR/pid"
  lnk -cfr "$TMP_DIR" "$HOME_DIR/tmp"

  true
}

#-------------------------------------------------------------------------------
