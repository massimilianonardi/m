SICUREZZA, CERTEZZA DEI DATI ED IDENTITà DIGITALE/REALE E MONETA DIGITALE, DNS/ADDRESSING

la sicurezza ed autenticazione riguarda il db distribuito ovvero il grafo distribuito
il problema cruciale è nella distribuzione delle chiave pubbliche, nella rete di fiducia (e se serve) e nella revoca delle chiavi

lo storage distribuito essendo un grafo (quasi albero) modificabile nella struttura, non può essere tutto serializzato per ovvie questioni di performance 
(se modifico un pezzettino a "monte" devo modificare tutto il db serializzato), però posso serializzare le parti terminali. 
in realtà devo pensare ad un serializzazione gerarchica così posso ridurre tutto a dei file relativamente piccoli (ad es. da 9mb a 100mb) più un 
file/tabella/sequenza con associati i relativi hash dei files. i files generalmente hanno valenza globale in tutto il network 
(la parte di db privata e locale è un caso particolare di vincoli imposti tramite policy...oppure deve essere gestita separatamente per sicurezza...) 
e quindi gli hash sono globali. 
poi ci sono parti di grafo che sono private o con complessi diritti di accesso e queste ovviamente vengono criptate con algoritmi simmetrici. 
quindi finora abbiamo parti in chiaro con hash di integrità e parti criptate con integrità. poi abbiamo parti dirette a chiave "pubblica" ibrida 
(ad es per le chat riservate e dirette tra due nodi). poi abbiamo una doppia coppia di chiavi private/pubbliche per le comunicazioni "broadcasting"...

in realtà quanto sopra è descritto in modo approssimativo ed anche inesatto, in realtà il punto è che servono:
- algoritmi simmetrici -> scrya (simmetric crypting alg) + scrya-k (chiave = hash(pass))
- algoritmi asimmetrici -> acrya + acrya-ck + acrya-dk (chiavi di cripting e decripting...rispettivamente pub/pri o viceversa a seconda dell'uso...)
- algoritmi di hashing -> hash
- algoritmi di scambio/ricerca serverless...è un mondo a se...ma fondamentalmente una lista dinamica di ip + un protocollo "sicuro" di 
  scambio dati/comandi...da pensare bene...
NB la comunicazione tra client può essere in chiaro (la sicurezza è gestita a livello più alto, il protocollo serve solo per scambiare i file 
e verificandone l'integrità), può essere criptata e/o offuscata (steganografia)

NB il trasferimento dei file può avvenire anche tramite altri canali (file hosting http, mail, ecc.) ed addirittura può avvenire tramite altri 
client e reti (es. torrent, ecc.)
