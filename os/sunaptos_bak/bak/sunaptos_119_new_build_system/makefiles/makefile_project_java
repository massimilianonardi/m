# OPTIONAL INPUT VARIABLES: SOURCE_DIR, BUILD_DIR, DIST_DIR, PROJECT, JAVA_MAIN_CLASS, JAVA_FLAGS, JAVA_CLASSPATH_BUILD, JAVA_CLASSPATH_RUN, JAVA_FILES_DIST

.PHONY: all clean build
.DEFAULT_GOAL:=all

include defaults_directories.conf
include defaults_project.conf
include makefile.conf

# build environment
JAVAC=javac
JAR=jar

# build variables
ifeq ($(JAVA_MAIN_CLASS),)
  JAVA_MAIN_CLASS=$(PROJECT)
endif

ifneq ($(JAVA_CLASSPATH_BUILD),)
  JAVA_FLAGS+=-classpath "$(JAVA_CLASSPATH_BUILD)"
endif

SOURCE_FILES=$(shell find $(SOURCE_DIR) -name "*.java")
MANIFEST_FILE=$(BUILD_DIR)/META-INF/MANIFEST.MF

PROJECT_OUTPUT_FILENAME=$(DIST_DIR)/$(PROJECT).jar



################################################################################
### TARGETS
################################################################################

all: clean build

clean:
	$(RM) -r $(BUILD_DIR)
	$(RM) $(PROJECT_OUTPUT_FILENAME)

build:
	$(MKDIR) -p $(BUILD_DIR)
	$(MKDIR) -p $(DIST_DIR)
	$(JAVAC) $(JAVA_FLAGS) -sourcepath $(SOURCE_DIR) -processorpath $(SOURCE_DIR) -d $(BUILD_DIR) $(SOURCE_FILES)
	$(MKDIR) -p $(BUILD_DIR)/META-INF
	$(ECHO) "Class-Path:" $(JAVA_CLASSPATH_RUN)>$(MANIFEST_FILE)
	$(JAR) cfem $(PROJECT_OUTPUT_FILENAME) $(JAVA_MAIN_CLASS) $(MANIFEST_FILE) -C $(BUILD_DIR) .
ifneq ($(JAVA_FILES_DIST),)
	$(CP) $(JAVA_FILES_DIST) $(DIST_DIR)
endif
