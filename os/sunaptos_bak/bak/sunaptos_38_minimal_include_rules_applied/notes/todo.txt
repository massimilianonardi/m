exception on configurable output/logger, rethink whole structure particularly based on sequence
make base Service default function "f" call the virtual overloaded version (implemented by specific srv implementation) surrounded by new try/catch macros, same thing for srv creation
system namespace and modules namespaces parametric
system log based on streamoutput with loglevel etc.
system debug based on system log?
system advanced buffer derived from buffer construct, copy and cast to/from basic data types and operator[] -> no
sequence derived from advanced buffer? -> probably no
dlib.cpp generated by invoked macro inside of it for each srv
dlib.cpp and dynamiclibraryloader independent of service* -> object*
rethnk service interface
revise streams
cross platform system gui class as external srv
Object with a to_string() virtual method

inlcude rules:

- header: minimal self sufficient to compile
-- standard library headers
-- system os specific headers
-- third party libraries
-- this project minimal self sufficient headers

- body: minimal self sufficient to compile
-- first of all its own header to confirm the self sufficiency at compile time
-- standard library headers
-- system os specific headers
-- third party libraries
-- this project minimal self sufficient headers
