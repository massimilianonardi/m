Usage:

mk [PROJECT] [--profiles [PROFILE]... --] [TARGET[:PARAMS]]...
mk \\0|'\0'|"\0" [--profiles [PROFILE]... --] [TARGET[:PARAMS]]... -- [PROJECT]...

in the first form if project is not specified, it is assumed to be PROJECT="." and execution continues
in the second form if no project is specified, no assumptions are made and execution stops because the project list is empty

PROJECT:
path to project configuration file
path to a project dir
relative path to project directory that satisfies one of the following matches in order: $SRC_DIR/$PROJECT, SRC_DIR/$PRJ_PATH/$PROJECT, SRC_DIR/$PRJ_PATH/../$PROJECT
relative path to project directory that satisfies one of the following matches in order: ./$PROJECT, ../$PROJECT

[PROFILE]...:
overrides the PROFILES environment variable from project main configuration file
profiles must conform to sh naming standard for variables

TARGET:
clean, build, depend, dependclean, dependall, run, install

each target is independent by design
if empty by default performs installation applying the target chain: dependclean clean depend build install
typical target chain for development: depend build run

clean: removes build/dist/run directories
build: if any source or conf file is newer than last built, then descend type
depend: invokes mk on every project in $DEPEND_PRJ with targets "depend build", then import files from mapping in $DEPEND_PRJ
dependclean: invokes mk on every project in $DEPEND_PRJ with targets "clean depend build", then import files from mapping in $DEPEND_PRJ
dependall: invokes mk on every project in $DEPEND_PRJ with same targets as the invoking instance of mk, then import files from mapping in $DEPEND_PRJ
run: sets the system ROOT_DIR=$RUN_DIR, or $INST_DIR if not empty, then descend type
install: if not empty sets the system ROOT_DIR=$INST_DIR, then descend type
any additional custom target can be provided by defining proper functions visible at the time targets are processed, typically in master or project configuration
targets must conform to sh naming standard for variables

PARAMS:
depend: [TARGET]...|-TARGET[:TARGET|:-TARGET|:+TARGET]...
overrides the default TARGETS_PROPAGATION_DEFAULT + adds the master targets, - removes all targets +TARGET adds, -TARGET removes
run: INST_DIR (overrides the default $RUN_DIR)
install: INST_DIR (overrides the default $ROOT_DIR)

TYPE:
can be more than one separated by space, they are executed in order
file:
  build: import files from source into $DIST_DIR
  run: import files from $DIST_DIR into $INST_DIR (defaults to $RUN_DIR)
  install: import files from $DIST_DIR into $INST_DIR (defaults to $ROOT_DIR)
pkg:
  build: import files from source into $DIST_DIR
  run: install package from $DIST_DIR into $INST_DIR (defaults to $RUN_DIR)
  install: install package from $DIST_DIR into $INST_DIR (defaults to $ROOT_DIR)
cpp/java/javascript/webapp:
  build: compile source into $DIST_DIR, by using $BUILD_DIR for intermediate files
  run: generate specific standard package taking "bin" from $DIST_DIR and install into $INST_DIR (defaults to $RUN_DIR)
  install: generate specific standard package taking "bin" from $DIST_DIR and install into $INST_DIR (defaults to $ROOT_DIR)

import files can be done via copy or via link depending on the value of the HOTSEEX variable
the change of the root dir can be done by overlaying on the current system, or by complete isolation
run target should be executed by an unpriviledged user without permission to go outside of the INST_DIR/RUN_DIR

HOTSEEX=[true|false]: hotsynch edits exported / hotsync edit export
each type should support hotseex for any target (even install)
HOTSEEX_LEVEL=[INTEGER]: applies to type file and pkg. -1|inf -> full deep recursion, 0...n -> level of subdirectory to apply
eg:
sh, javascript or any script type can be compiled to solid file for optimum performance release, or many files to load at runtime, 
java and webapps in classes and files instead jar and war, c/c++ only sunaptos support, etc.



Examples:

mk test clean build; mk test --profiles:linux -- run
if project configuration defines PROFILES="windows linux", 
then clean and build are executed for global profiles windows and linux, 
but run only for linux profile
