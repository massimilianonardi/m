#!/bin/sh

#-------------------------------------------------------------------------------

exec_exit()
{
  "$@" || exit "$?"
}

exec_try_catch()
{
  ("$@") && return "$?"
}

exec_try_throw()
{
  ("$@") || exit "$?"
}

#-------------------------------------------------------------------------------

exec_export_var()
(
#  eval 'shift; "$@" >/dev/null 2>&1 || return "$?"; echo '\$$1
  eval 'shift; "$@" >/dev/null || return "$?"; echo $'$1
)

#-------------------------------------------------------------------------------

exist()
{
  type "$1">/dev/null 2>&1
}

#-------------------------------------------------------------------------------

exec_type()
(
  TYPE="$(type "$@")"
  EXIT_CODE="$?"
  if [ "$EXIT_CODE" != "0" ]
  then
    echo "undefined"
    exit "$EXIT_CODE"
  else
    if [ "$TYPE" != "${TYPE#*function*}" ] && [ "$TYPE" = "${TYPE%/*}" ]
    then
      echo "function"
    else
      echo "file"
    fi
  fi
)

#-------------------------------------------------------------------------------

env_show()
{
#  set | sed 's/.* ()//' | tr '\n' ' '; echo
  set | sed '/ ()/q' | sed 's/.* ()//'; echo
}

#-------------------------------------------------------------------------------

env_list()
{
  set | sed '/ ()/q;s/=.*//g' | sed 's/.* ()//' | tr '\n' ' '; echo
}

#-------------------------------------------------------------------------------

env_monitor_start()
{
  ENV_START=" $(set | sed '/ ()/q;s/=.*//g' | sed 's/.* ()//' | tr '\n' ' ') "
}

#-------------------------------------------------------------------------------

env_monitor_stop()
{
  ENV_END="$(set | sed "/ ()/q;s/=.*//g;s/ENV_START//;s/'//" | sed 's/.* ()//')"
}

#-------------------------------------------------------------------------------

env_monitor_diff()
(
  for k in $ENV_END
  do
    [ -n "${ENV_START##* $k *}" ] && eval "echo $k=\"\$$k\""
  done
)

#-------------------------------------------------------------------------------
