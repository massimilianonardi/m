#!/bin/bash

#-------------------------------------------------------------------------------

encode()
(
  if [ -z "$1" ]
  then
    exit 1
  fi
  
  local LANG=C
  local length="${#1}"
  for (( i = 0; i < length; i++ ))
  do
    local c="${1:i:1}"
    case $c in
      [a-zA-Z0-9\.\~\_\-\:\/\?\#]) printf "$c" ;;
      [a-zA-Z0-9\.\~\_\-\:/\?\#\[\]@!\$\&\'\(\)\*+,\;=]) printf "$c" ;;
      *) printf '%%%02X' "'$c" ;; 
    esac
  done
)

#-------------------------------------------------------------------------------

decode()
(
  if [ -z "$1" ]
  then
    exit 1
  fi
  
  local url_encoded="${1//+/ }"
  printf '%b' "${url_encoded//%/\\x}"
)

#-------------------------------------------------------------------------------

smart()
{
  case "$1" in
    "encode") true;;
    "decode") true;;
    *) exit 1;;
  esac
  
  if [ "$2" != "${2%\?*}" ]
  then
    echo "${2%%\?*}?$("$1" "${2#*\?}")"
  else
    echo "$2"
  fi
}

#-------------------------------------------------------------------------------

main()
{
  case "$1" in
    "encode") true;;
    "decode") true;;
    "smart") true;;
    *) exit 1;;
  esac
  
  "$@"
}

#-------------------------------------------------------------------------------

. m.lib.sh

ARGS_PARSE="true"
ARGS_FORMAT="smart"

m_command "$@"

#-------------------------------------------------------------------------------
