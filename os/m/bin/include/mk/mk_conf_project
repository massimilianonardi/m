#!/bin/sh

#-------------------------------------------------------------------------------

mk_conf_project()
{
  mk_project_detect "$@"
  mk_conf_file_load
  
  return 0
}

#-------------------------------------------------------------------------------

mk_project_detect()
{
  if [ -n "$1" ] && [ -f "$1" ]
  then
    mk_project_detect_from_conf_file "$1"
  else
    mk_project_detect_from_dir "$1"
  fi
}

#-------------------------------------------------------------------------------

mk_project_detect_from_conf_file()
{
  MKCONF_FILE="$1"
  log_debug "project conf file detected MKCONF_FILE: $MKCONF_FILE"
# todo guess prj structure from conf file prj dir is 1 less mkconf path
}

#-------------------------------------------------------------------------------

mk_project_detect_from_dir()
{
  if [ -z "$1" ]
  then
    log_trace "project match found: ."
    PRJ_DIR="."
  else
    if [ "$MASSIMILIANO_NARDI" = "MASSIMILIANO_NARDI" ] && [ -n "$SRC_DIR" ] && [ -d "$SRC_DIR/$1" ]
    then
      log_trace "project match found: \$SRC_DIR/\$1"
      PRJ_DIR="$SRC_DIR/$1"
      PRJ_PATH="$1"
    elif [ "$MASSIMILIANO_NARDI" = "MASSIMILIANO_NARDI" ] && [ -n "$SRC_DIR" ] && [ -n "$PRJ_PATH" ] && [ -d "$SRC_DIR/$PRJ_PATH/$1" ]
    then
      log_trace "project match found: \$SRC_DIR/\$PRJ_PATH/\$1"
      PRJ_DIR="$SRC_DIR/$PRJ_PATH/$1"
      PRJ_PATH="$PRJ_PATH/$1"
    elif [ "$MASSIMILIANO_NARDI" = "MASSIMILIANO_NARDI" ] && [ -n "$SRC_DIR" ] && [ -n "$PRJ_PATH" ] && [ -d "$SRC_DIR/$PRJ_PATH/../$1" ]
    then
      log_trace "project match found: \$SRC_DIR/\$PRJ_PATH/../\$1"
      PRJ_PATH="$(dirname "$PRJ_PATH")"
      PRJ_DIR="$SRC_DIR/$PRJ_PATH/$1"
      PRJ_PATH="$PRJ_PATH/$1"
    elif [ -n "$PRJ_PATH" ] && [ -d "./$PRJ_PATH/$1" ]
    then
      log_trace "project match found: ./\$PRJ_PATH/\$1"
      PRJ_DIR="$(pwd)/$PRJ_PATH/$1"
      PRJ_PATH="$PRJ_PATH/$1"
    elif [ -n "$PRJ_PATH" ] && [ -d "./$PRJ_PATH/../$1" ]
    then
      log_trace "project match found: ./\$PRJ_PATH/../\$1"
      PRJ_PATH="$(dirname "$PRJ_PATH")"
      PRJ_DIR="$(pwd)/$PRJ_PATH/$1"
      PRJ_PATH="$PRJ_PATH/$1"
    elif [ -n "$PRJ_PATH" ] && [ -d "/$PRJ_PATH/$1" ]
    then
      log_trace "project match found: /\$PRJ_PATH/\$1"
      PRJ_DIR="/$PRJ_PATH/$1"
      PRJ_PATH="$PRJ_PATH/$1"
    elif [ -n "$PRJ_PATH" ] && [ -d "/$PRJ_PATH/../$1" ]
    then
      log_trace "project match found: /\$PRJ_PATH/../\$1"
      PRJ_PATH="$(dirname "$PRJ_PATH")"
      PRJ_DIR="/$PRJ_PATH/$1"
      PRJ_PATH="$PRJ_PATH/$1"
    elif [ -d "./$1" ]
    then
      log_trace "project match found: ./\$1"
      PRJ_DIR="$(pwd)/$1"
#      PRJ_PATH="$1"
      PRJ_PATH="${PRJ_DIR#/}"
    elif [ -d "../$1" ]
    then
      log_trace "project match found: ../\$1"
      PRJ_DIR="../$1"
#      PRJ_PATH="$1"
      PRJ_DIR="$(dirname "$(pwd)")/$1"
      PRJ_PATH="${PRJ_DIR#/}"
    elif [ -d "$1" ]
    then
      log_trace "project match found: \$1"
      PRJ_DIR="$1"
      if [ -z "$PRJ_PATH" ]
      then
        PRJ_PATH="${PRJ_DIR#/}"
#        PRJ_PATH="$PRJ_DIR"
#        PRJ_PATH=""
#        PRJ_PATH="$(basename "$PRJ_DIR")"
##        PRJ_PATH="$PRJ_DIR"
##        PRJ_PATH="${PRJ_PATH#^\.\/}"
##        PRJ_PATH="${PRJ_PATH#^\/}"
      else
        PRJ_PATH="$PRJ_PATH/$(basename "$PRJ_DIR")"
      fi
    else
      echo "cannot find project dir! PRJ_PATH: $PRJ_PATH - ARG: $1 - ARGS: $@"
      exit 1
    fi
  fi
  
  log_trace "project dir detected - PRJ_DIR: $PRJ_DIR"
  
  PRJ_DIR="$(path -la "$PRJ_DIR")"
  PROJECT="$(basename "$PRJ_DIR")"
  
  log_trace "project detected - PROJECT: $PROJECT - PRJ_PATH: $PRJ_PATH - PRJ_DIR: $PRJ_DIR"
  
  mk_relativize_dirs "$PRJ_DIR" "$PRJ_PATH" "$PROJECT"
  
  MKCONF_FILE="$MKCONF_DIR/$MKCONF_FILENAME"
}

#-------------------------------------------------------------------------------

mk_relativize_dirs()
{
  if [ -z "$1" ] || [ -z "$2" ]
  then
    echo cannot relativize dirs: missing parameters
    exit 1
  fi
  
#  if [ ! -d "$1" ]
#  then
#    echo cannot relativize dirs: root dir is not a directory
#    exit 1
#  fi
  
#  SOURCE_DIR="$(trace call exit mk_relativize_exist_dir "$1" "$2" "$3" "$SOURCE_DIR" "$SOURCE_SUBDIR")" || exit "$?"
#  MKCONF_DIR="$(trace call exit mk_relativize_exist_dir "$1" "$2" "$3" "$MKCONF_DIR" "$MKCONF_SUBDIR")" || exit "$?"
#  BUILD_DIR="$(trace call exit mk_relativize_dir "$1" "$2" "$3" "$BUILD_DIR" "$BUILD_SUBDIR")" || exit "$?"
#  DIST_DIR="$(trace call exit mk_relativize_dir "$1" "$2" "$3" "$DIST_DIR" "$DIST_SUBDIR" "${SHARED_DIST_DIR+true}" "$SHARED_DIST_DIR")" || exit "$?"
#  RUN_DIR="$(trace call exit mk_relativize_dir "$1" "$2" "$3" "$RUN_DIR" "$RUN_SUBDIR" "${SHARED_RUN_DIR+true}" "$SHARED_RUN_DIR")" || exit "$?"
#  TASK_DIR="$(trace call exit mk_relativize_dir "$1" "$2" "$3" "$TASK_DIR" "$TASK_SUBDIR")" || exit "$?"
  
  SOURCE_DIR="$(mk_relativize_exist_dir "$1" "$2" "$3" "$SOURCE_DIR" "$SOURCE_SUBDIR")" || exit "$?"
  MKCONF_DIR="$(mk_relativize_exist_dir "$1" "$2" "$3" "$MKCONF_DIR" "$MKCONF_SUBDIR")" || exit "$?"
  BUILD_DIR="$(mk_relativize_dir "$1" "$2" "$3" "$BUILD_DIR" "$BUILD_SUBDIR")" || exit "$?"
  DIST_DIR="$(mk_relativize_dir "$1" "$2" "$3" "$DIST_DIR" "$DIST_SUBDIR" "${SHARED_DIST_DIR+true}" "$SHARED_DIST_DIR")" || exit "$?"
  RUN_DIR="$(mk_relativize_dir "$1" "$2" "$3" "$RUN_DIR" "$RUN_SUBDIR" "${SHARED_RUN_DIR+true}" "$SHARED_RUN_DIR")" || exit "$?"
  TASK_DIR="$(mk_relativize_dir "$1" "$2" "$3" "$TASK_DIR" "$TASK_SUBDIR")" || exit "$?"
}

#-------------------------------------------------------------------------------

mk_relativize_exist_dir()
(
  PRJ_DIR="$1"
  PRJ_PATH="$2"
  PROJECT="$3"
  DIR="$4"
  SUBDIR="$5"
  
  if [ -z "$DIR" ] && [ -d "$PRJ_DIR" ]
  then
    if [ -n "$SUBDIR" ]  && [ -d "$PRJ_DIR/$SUBDIR" ]
    then
      DIR="$PRJ_DIR/$SUBDIR"
    else
      DIR="$PRJ_DIR"
    fi
  elif [ -n "$DIR" ] && [ -d "$DIR" ]
  then
    if [ -n "$PROJECT" ]  && [ -d "$DIR/$PROJECT" ]
    then
      DIR="$DIR/$PROJECT"
    fi
  else
    exit 1
  fi
  
  echo "$DIR"
)

#-------------------------------------------------------------------------------

mk_relativize_dir()
(
  PRJ_DIR="$1"
  PRJ_PATH="$2"
  PROJECT="$3"
  DIR="$4"
  SUBDIR="$5"
  SHARED="$6"
  SHARED_DIR="$7"
  
  if [ -z "$DIR" ]
  then
    if [ -z "$SUBDIR" ]
    then
      DIR="$PRJ_DIR"
    else
      DIR="$PRJ_DIR/$SUBDIR"
    fi
  elif [ "$SHARED" = "true" ]
  then
    if [ -n "$SHARED_DIR" ]
    then
      DIR="$DIR/$SHARED_DIR"
    fi
  else
#    DIR="$DIR/$PROJECT"
    DIR="$DIR/$PRJ_PATH"
  fi
  
  echo "$DIR"
)

#-------------------------------------------------------------------------------
