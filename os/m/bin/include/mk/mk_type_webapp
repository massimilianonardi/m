#!/bin/sh

#-------------------------------------------------------------------------------

cygpath_java_classpath()
(
  CLASSPATH=""
  for k in $1
  do
    CLASSPATH="$CLASSPATH;$(cygpath -w "$k")"
  done
  CLASSPATH="${CLASSPATH#\;}"
  echo "$CLASSPATH"
)

#-------------------------------------------------------------------------------

mk_type_webapp_target_build()
(
#  JAVA_FLAGS=""
#  JAVA_CLASSPATH_BUILD=""
#  JAVA_LIBRARIES_DIST=""
#  JAVA_PREPROCESSOR_PATH=""
#  JAVA_FILES_DIST=""
#  JAVA_FILES_DIST_DIR=""
#  JAVA_DEPLOY=""
  
  _METAINF_DIR="$BUILD_DIR/META-INF"
  _MANIFEST_FILE="$_METAINF_DIR/MANIFEST.MF"
  [ "$SYS_OS_TYPE" = "windows" ] && _MANIFEST_FILE="$(cygpath -w "$_MANIFEST_FILE")"
  _WEBINF_DIR="$BUILD_DIR/WEB-INF"
  _CLASS_DIR="$_WEBINF_DIR/classes"
  _WEBLIB_DIR="$_WEBINF_DIR/lib"
  _SOURCE_FILES_LIST_FILE="$BUILD_DIR/source_files.txt"
  
  if [ -z "$NAME" ]
  then
    _WAR_FILENAME="$DIST_DIR/$PROJECT.war"
  else
    _WAR_FILENAME="$DIST_DIR/$NAME.war"
  fi
  
  [ -z "$JAVA_CLASSPATH_JARS" ] && JAVA_CLASSPATH_JARS="$JAVA_CLASSPATH_BUILD"
  
  if [ -z "$JAVA_WEB_DIR" ]
  then
    _WEB_SOURCE_DIR="$SOURCE_DIR/web"
  else
    _WEB_SOURCE_DIR="$SOURCE_DIR/$JAVA_WEB_DIR"
  fi
  
  if [ -z "$JAVA_JAVA_DIR" ]
  then
    _JAVA_SOURCE_DIR="$SOURCE_DIR/src"
  else
    _JAVA_SOURCE_DIR="$SOURCE_DIR/$JAVA_JAVA_DIR"
  fi
  
  if [ -n "$JAVA_CLASSPATH_BUILD" ]
  then
    if [ "$SYS_OS_TYPE" = "windows" ]
    then
#      JAVA_CLASSPATH_BUILD="$(echo "$JAVA_CLASSPATH_BUILD" | tr ' ' ';')"
      JAVA_CLASSPATH_BUILD="$(cygpath_java_classpath "$JAVA_CLASSPATH_BUILD")"
    else
      JAVA_CLASSPATH_BUILD="$(echo "$JAVA_CLASSPATH_BUILD" | tr ' ' ':')"
    fi
#    JAVA_FLAGS="-classpath \"$JAVA_CLASSPATH_BUILD\" $JAVA_FLAGS"
    JAVA_FLAGS="-classpath $JAVA_CLASSPATH_BUILD $JAVA_FLAGS"
  fi
  
  if [ -n "$JAVA_PREPROCESSOR_PATH" ]
  then
#    JAVA_FLAGS="-processorpath \"$JAVA_PREPROCESSOR_PATH\" $JAVA_FLAGS"
    JAVA_FLAGS="-processorpath $JAVA_PREPROCESSOR_PATH $JAVA_FLAGS"
  fi
  
  _JAR_FLAGS="cf"
  _JAR_PARAMS=""
  
  if [ "$TARGET" = "build" ]
  then
    mkdir -p "$BUILD_DIR"
    mkdir -p "$_CLASS_DIR"
    mkdir -p "$DIST_DIR"
    cp -r "$_WEB_SOURCE_DIR"/* "$BUILD_DIR"
    if [ "$SYS_OS_TYPE" = "windows" ]
    then
#      BUILD_DIR="$(cygpath -w "$BUILD_DIR")"
      _CLASS_DIR="$(cygpath -w "$_CLASS_DIR")"
      _SOURCE_FILES_LIST_FILE="$(cygpath -w "$_SOURCE_FILES_LIST_FILE")"
      _WAR_FILENAME="$(cygpath -w "$_WAR_FILENAME")"
    fi
    (
    cd "$SOURCE_DIR"
    find . -type f -name "*.java" > "$_SOURCE_FILES_LIST_FILE"
    javac $JAVA_FLAGS -sourcepath "." -d "$_CLASS_DIR" @"$_SOURCE_FILES_LIST_FILE"
    rm -f "$_SOURCE_FILES_LIST_FILE"
    )
    if [ -n "$JAVA_LIBRARIES_DIST" ]
    then
      mkdir -p "$_WEBLIB_DIR"
#      cp -r $JAVA_LIBRARIES_DIST "$_WEBLIB_DIR"
      for k in $JAVA_LIBRARIES_DIST
      do
        cp -L -fr "$k" "$_WEBLIB_DIR/$(basename "$k")"
      done
    fi
    jar $_JAR_FLAGS "$_WAR_FILENAME" $_JAR_PARAMS -C "$BUILD_DIR" .
#    mv "$BUILD_DIR" "$DIST_DIR/$PROJECT"
#    mv "$BUILD_DIR" "$DIST_DIR"
#ifneq ($(JAVA_DEPLOY),)
#  cp -r "$(BUILD_DIR)"/* "$(JAVA_DEPLOY)"
#endif
  fi
)

#-------------------------------------------------------------------------------

mk_type_webapp_target_install()
{
  mv "$DIST_DIR" "$DIST_DIR.tmp"
  mkdir -p "$DIST_DIR"
  mv "$DIST_DIR.tmp" "$DIST_DIR/bin"
  
  DIST_SYS_DIR="$DIST_DIR/sys"
#  DIST_DIR="$DIST_DIR/bin"
  
# todo copy libs option, cmd file only when main class (because jar exec and not jar lib) cmd for windows??? -> yes because even with cygwin java for windows has different cmd line
  mkdir -p "$DIST_SYS_DIR"
  echo "java">"$DIST_SYS_DIR/depend"
#  echo "java java-application-server">"$DIST_SYS_DIR/depend"
  echo "all">"$DIST_SYS_DIR/platform"
  if [ -z "$NAME" ]
  then
    echo "$PROJECT">"$DIST_SYS_DIR/name"
  else
    echo "$NAME">"$DIST_SYS_DIR/name"
  fi
  PACKAGE="$(echo "$PRJ_PATH" | sed 's|/|-|g')"
#  echo "$PKG_GROUP-$PKG_ARTIFACT">"$DIST_SYS_DIR/path"
#  echo "$PKG_GROUP-$PKG_ARTIFACT">"$DIST_SYS_DIR/env"
  echo "$PACKAGE=bin/$PROJECT">"$DIST_SYS_DIR/command"
#  echo "java/$PACKAGE.jar=bin/$PROJECT.war">"$DIST_SYS_DIR/lib"
  echo "java-webapp/$PACKAGE.war=bin/$PROJECT.war">"$DIST_SYS_DIR/lib"
#  echo "$PKG_ARTIFACT.jar=bin/$PKG_ARTIFACT-$PKG_VERSION.jar">>"$DIST_SYS_DIR/lib"
  if [ -z "$VERSION" ]
  then
    echo "latest">"$DIST_SYS_DIR/version"
  else
    echo "$VERSION">"$DIST_SYS_DIR/version"
  fi
  
#  if [ -z "$JAVA_MAIN_CLASS" ]
#  then
#    rm "$DIST_SYS_DIR/command"
#    rm "$DIST_DIR/$PROJECT"
#    rm "$DIST_DIR/$PROJECT".cmd
#  fi
}

#-------------------------------------------------------------------------------
